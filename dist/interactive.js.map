{"version":3,"sources":["webpack://Interactive/webpack/bootstrap","webpack://Interactive/./node_modules/three.meshline/src/THREE.MeshLine.js","webpack://Interactive/./src/core/Axes.ts","webpack://Interactive/./src/core/Axes2D.ts","webpack://Interactive/./src/core/Axes3D.ts","webpack://Interactive/./src/core/Plot.ts","webpack://Interactive/./src/core/internal.ts","webpack://Interactive/./src/figures/Arrow2D.ts","webpack://Interactive/./src/figures/Parametric2D.ts","webpack://Interactive/./src/index.ts","webpack://Interactive/external \"math\"","webpack://Interactive/external \"THREE\""],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,CAAC;;AAED;;AAEA;;AAEA,kBAAkB,UAAc;;AAEhC,yCAAyC,mBAAO,CAAC,oBAAO;AACxD;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;;AAEA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF,WAAW,cAAc;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB;AACvB;AACA,yBAAyB;AACzB,yBAAyB;AACzB,qBAAqB;AACrB,sBAAsB;AACtB,uBAAuB;AACvB,mBAAmB;AACnB,0BAA0B;AAC1B;AACA,+BAA+B;AAC/B,8BAA8B;AAC9B,yBAAyB;AACzB,yBAAyB;AACzB,oBAAoB;AACpB,uBAAuB;AACvB,oBAAoB;AACpB,mBAAmB;AACnB,+BAA+B;AAC/B;AACA,kBAAkB;AAClB,qBAAqB;AACrB,yBAAyB;AACzB;AACA,mCAAmC;AACnC;AACA,2BAA2B;AAC3B,qBAAqB;AACrB,wBAAwB;AACxB,gBAAgB;AAChB;AACA,EAAE;AACF;AACA,cAAc;AACd;AACA,gDAAgD;AAChD,wEAAwE;AACxE;AACA,qCAAqC;AACrC,cAAc;AACd;AACA,iDAAiD;AACjD,oDAAoD;AACpD,8CAA8C;AAC9C,0CAA0C;AAC1C;AACA,kDAAkD;AAClD,yCAAyC;AACzC,yCAAyC;AACzC;AACA,wDAAwD;AACxD,oDAAoD;AACpD;AACA,kCAAkC;AAClC,qCAAqC;AACrC,MAAM;AACN;AACA,cAAc;AACd,iEAAiE;AACjE,sEAAsE;AACtE,WAAW;AACX,mDAAmD;AACnD,mDAAmD;AACnD,wCAAwC;AACx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","file":"interactive.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n",";(function() {\n\n\"use strict\";\n\nvar root = this\n\nvar has_require = typeof require !== 'undefined'\n\nvar THREE = root.THREE || has_require && require('three')\nif( !THREE )\n\tthrow new Error( 'MeshLine requires three.js' )\n\nfunction MeshLine() {\n\n\tthis.positions = [];\n\n\tthis.previous = [];\n\tthis.next = [];\n\tthis.side = [];\n\tthis.width = [];\n\tthis.indices_array = [];\n\tthis.uvs = [];\n\tthis.counters = [];\n\tthis.geometry = new THREE.BufferGeometry();\n\n\tthis.widthCallback = null;\n\n}\n\nMeshLine.prototype.setGeometry = function( g, c ) {\n\n\tthis.widthCallback = c;\n\n\tthis.positions = [];\n\tthis.counters = [];\n\n\tif( g instanceof THREE.Geometry ) {\n\t\tfor( var j = 0; j < g.vertices.length; j++ ) {\n\t\t\tvar v = g.vertices[ j ];\n\t\t\tvar c = j/g.vertices.length;\n\t\t\tthis.positions.push( v.x, v.y, v.z );\n\t\t\tthis.positions.push( v.x, v.y, v.z );\n\t\t\tthis.counters.push(c);\n\t\t\tthis.counters.push(c);\n\t\t}\n\t}\n\n\tif( g instanceof THREE.BufferGeometry ) {\n\t\t// read attribute positions ?\n\t}\n\n\tif( g instanceof Float32Array || g instanceof Array ) {\n\t\tfor( var j = 0; j < g.length; j += 3 ) {\n\t\t\tvar c = j/g.length;\n\t\t\tthis.positions.push( g[ j ], g[ j + 1 ], g[ j + 2 ] );\n\t\t\tthis.positions.push( g[ j ], g[ j + 1 ], g[ j + 2 ] );\n\t\t\tthis.counters.push(c);\n\t\t\tthis.counters.push(c);\n\t\t}\n\t}\n\n\tthis.process();\n\n}\n\nMeshLine.prototype.compareV3 = function( a, b ) {\n\n\tvar aa = a * 6;\n\tvar ab = b * 6;\n\treturn ( this.positions[ aa ] === this.positions[ ab ] ) && ( this.positions[ aa + 1 ] === this.positions[ ab + 1 ] ) && ( this.positions[ aa + 2 ] === this.positions[ ab + 2 ] );\n\n}\n\nMeshLine.prototype.copyV3 = function( a ) {\n\n\tvar aa = a * 6;\n\treturn [ this.positions[ aa ], this.positions[ aa + 1 ], this.positions[ aa + 2 ] ];\n\n}\n\nMeshLine.prototype.process = function() {\n\n\tvar l = this.positions.length / 6;\n\n\tthis.previous = [];\n\tthis.next = [];\n\tthis.side = [];\n\tthis.width = [];\n\tthis.indices_array = [];\n\tthis.uvs = [];\n\n\tfor( var j = 0; j < l; j++ ) {\n\t\tthis.side.push( 1 );\n\t\tthis.side.push( -1 );\n\t}\n\n\tvar w;\n\tfor( var j = 0; j < l; j++ ) {\n\t\tif( this.widthCallback ) w = this.widthCallback( j / ( l -1 ) );\n\t\telse w = 1;\n\t\tthis.width.push( w );\n\t\tthis.width.push( w );\n\t}\n\n\tfor( var j = 0; j < l; j++ ) {\n\t\tthis.uvs.push( j / ( l - 1 ), 0 );\n\t\tthis.uvs.push( j / ( l - 1 ), 1 );\n\t}\n\n\tvar v;\n\n\tif( this.compareV3( 0, l - 1 ) ){\n\t\tv = this.copyV3( l - 2 );\n\t} else {\n\t\tv = this.copyV3( 0 );\n\t}\n\tthis.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\tthis.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\tfor( var j = 0; j < l - 1; j++ ) {\n\t\tv = this.copyV3( j );\n\t\tthis.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\t\tthis.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\t}\n\n\tfor( var j = 1; j < l; j++ ) {\n\t\tv = this.copyV3( j );\n\t\tthis.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\t\tthis.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\t}\n\n\tif( this.compareV3( l - 1, 0 ) ){\n\t\tv = this.copyV3( 1 );\n\t} else {\n\t\tv = this.copyV3( l - 1 );\n\t}\n\tthis.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\tthis.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\n\tfor( var j = 0; j < l - 1; j++ ) {\n\t\tvar n = j * 2;\n\t\tthis.indices_array.push( n, n + 1, n + 2 );\n\t\tthis.indices_array.push( n + 2, n + 1, n + 3 );\n\t}\n\n\tif (!this.attributes) {\n\t\tthis.attributes = {\n\t\t\tposition: new THREE.BufferAttribute( new Float32Array( this.positions ), 3 ),\n\t\t\tprevious: new THREE.BufferAttribute( new Float32Array( this.previous ), 3 ),\n\t\t\tnext: new THREE.BufferAttribute( new Float32Array( this.next ), 3 ),\n\t\t\tside: new THREE.BufferAttribute( new Float32Array( this.side ), 1 ),\n\t\t\twidth: new THREE.BufferAttribute( new Float32Array( this.width ), 1 ),\n\t\t\tuv: new THREE.BufferAttribute( new Float32Array( this.uvs ), 2 ),\n\t\t\tindex: new THREE.BufferAttribute( new Uint16Array( this.indices_array ), 1 ),\n\t\t\tcounters: new THREE.BufferAttribute( new Float32Array( this.counters ), 1 )\n\t\t}\n\t} else {\n\t\tthis.attributes.position.copyArray(new Float32Array(this.positions));\n\t\tthis.attributes.position.needsUpdate = true;\n\t\tthis.attributes.previous.copyArray(new Float32Array(this.previous));\n\t\tthis.attributes.previous.needsUpdate = true;\n\t\tthis.attributes.next.copyArray(new Float32Array(this.next));\n\t\tthis.attributes.next.needsUpdate = true;\n\t\tthis.attributes.side.copyArray(new Float32Array(this.side));\n\t\tthis.attributes.side.needsUpdate = true;\n\t\tthis.attributes.width.copyArray(new Float32Array(this.width));\n\t\tthis.attributes.width.needsUpdate = true;\n\t\tthis.attributes.uv.copyArray(new Float32Array(this.uvs));\n\t\tthis.attributes.uv.needsUpdate = true;\n\t\tthis.attributes.index.copyArray(new Uint16Array(this.indices_array));\n\t\tthis.attributes.index.needsUpdate = true;\n    }\n\n\tthis.geometry.addAttribute( 'position', this.attributes.position );\n\tthis.geometry.addAttribute( 'previous', this.attributes.previous );\n\tthis.geometry.addAttribute( 'next', this.attributes.next );\n\tthis.geometry.addAttribute( 'side', this.attributes.side );\n\tthis.geometry.addAttribute( 'width', this.attributes.width );\n\tthis.geometry.addAttribute( 'uv', this.attributes.uv );\n\tthis.geometry.addAttribute( 'counters', this.attributes.counters );\n\n\tthis.geometry.setIndex( this.attributes.index );\n\n}\n\nfunction memcpy (src, srcOffset, dst, dstOffset, length) {\n\tvar i\n\n\tsrc = src.subarray || src.slice ? src : src.buffer\n\tdst = dst.subarray || dst.slice ? dst : dst.buffer\n\n\tsrc = srcOffset ? src.subarray ?\n\tsrc.subarray(srcOffset, length && srcOffset + length) :\n\tsrc.slice(srcOffset, length && srcOffset + length) : src\n\n\tif (dst.set) {\n\t\tdst.set(src, dstOffset)\n\t} else {\n\t\tfor (i=0; i<src.length; i++) {\n\t\t\tdst[i + dstOffset] = src[i]\n\t\t}\n\t}\n\n\treturn dst\n}\n\n/**\n * Fast method to advance the line by one position.  The oldest position is removed.\n * @param position\n */\nMeshLine.prototype.advance = function(position) {\n\n\tvar positions = this.attributes.position.array;\n\tvar previous = this.attributes.previous.array;\n\tvar next = this.attributes.next.array;\n\tvar l = positions.length;\n\n\t// PREVIOUS\n\tmemcpy( positions, 0, previous, 0, l );\n\n\t// POSITIONS\n\tmemcpy( positions, 6, positions, 0, l - 6 );\n\n\tpositions[l - 6] = position.x;\n\tpositions[l - 5] = position.y;\n\tpositions[l - 4] = position.z;\n\tpositions[l - 3] = position.x;\n\tpositions[l - 2] = position.y;\n\tpositions[l - 1] = position.z;\n\n    // NEXT\n\tmemcpy( positions, 6, next, 0, l - 6 );\n\n\tnext[l - 6]  = position.x;\n\tnext[l - 5]  = position.y;\n\tnext[l - 4]  = position.z;\n\tnext[l - 3]  = position.x;\n\tnext[l - 2]  = position.y;\n\tnext[l - 1]  = position.z;\n\n\tthis.attributes.position.needsUpdate = true;\n\tthis.attributes.previous.needsUpdate = true;\n\tthis.attributes.next.needsUpdate = true;\n\n};\n\nfunction MeshLineMaterial( parameters ) {\n\n\tvar vertexShaderSource = [\n'precision highp float;',\n'',\n'attribute vec3 position;',\n'attribute vec3 previous;',\n'attribute vec3 next;',\n'attribute float side;',\n'attribute float width;',\n'attribute vec2 uv;',\n'attribute float counters;',\n'',\n'uniform mat4 projectionMatrix;',\n'uniform mat4 modelViewMatrix;',\n'uniform vec2 resolution;',\n'uniform float lineWidth;',\n'uniform vec3 color;',\n'uniform float opacity;',\n'uniform float near;',\n'uniform float far;',\n'uniform float sizeAttenuation;',\n'',\n'varying vec2 vUV;',\n'varying vec4 vColor;',\n'varying float vCounters;',\n'',\n'vec2 fix( vec4 i, float aspect ) {',\n'',\n'    vec2 res = i.xy / i.w;',\n'    res.x *= aspect;',\n'\t vCounters = counters;',\n'    return res;',\n'',\n'}',\n'',\n'void main() {',\n'',\n'    float aspect = resolution.x / resolution.y;',\n'\t float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);',\n'',\n'    vColor = vec4( color, opacity );',\n'    vUV = uv;',\n'',\n'    mat4 m = projectionMatrix * modelViewMatrix;',\n'    vec4 finalPosition = m * vec4( position, 1.0 );',\n'    vec4 prevPos = m * vec4( previous, 1.0 );',\n'    vec4 nextPos = m * vec4( next, 1.0 );',\n'',\n'    vec2 currentP = fix( finalPosition, aspect );',\n'    vec2 prevP = fix( prevPos, aspect );',\n'    vec2 nextP = fix( nextPos, aspect );',\n'',\n'\t float pixelWidth = finalPosition.w * pixelWidthRatio;',\n'    float w = 1.8 * pixelWidth * lineWidth * width;',\n'',\n'    if( sizeAttenuation == 1. ) {',\n'        w = 1.8 * lineWidth * width;',\n'    }',\n'',\n'    vec2 dir;',\n'    if( nextP == currentP ) dir = normalize( currentP - prevP );',\n'    else if( prevP == currentP ) dir = normalize( nextP - currentP );',\n'    else {',\n'        vec2 dir1 = normalize( currentP - prevP );',\n'        vec2 dir2 = normalize( nextP - currentP );',\n'        dir = normalize( dir1 + dir2 );',\n'',\n'        vec2 perp = vec2( -dir1.y, dir1.x );',\n'        vec2 miter = vec2( -dir.y, dir.x );',\n'        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );',\n'',\n'    }',\n'',\n'    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;',\n'    vec2 normal = vec2( -dir.y, dir.x );',\n'    normal.x /= aspect;',\n'    normal *= .5 * w;',\n'',\n'    vec4 offset = vec4( normal * side, 0.0, 1.0 );',\n'    finalPosition.xy += offset.xy;',\n'',\n'    gl_Position = finalPosition;',\n'',\n'}' ];\n\n\tvar fragmentShaderSource = [\n\t\t'#extension GL_OES_standard_derivatives : enable',\n'precision mediump float;',\n'',\n'uniform sampler2D map;',\n'uniform sampler2D alphaMap;',\n'uniform float useMap;',\n'uniform float useAlphaMap;',\n'uniform float useDash;',\n'uniform float dashArray;',\n'uniform float dashOffset;',\n'uniform float dashRatio;',\n'uniform float visibility;',\n'uniform float alphaTest;',\n'uniform vec2 repeat;',\n'',\n'varying vec2 vUV;',\n'varying vec4 vColor;',\n'varying float vCounters;',\n'',\n'void main() {',\n'',\n'    vec4 c = vColor;',\n'    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );',\n'    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;',\n'    if( c.a < alphaTest ) discard;',\n'    if( useDash == 1. ){',\n'        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));',\n'    }',\n'    gl_FragColor = c;',\n'    gl_FragColor.a *= step(vCounters, visibility);',\n'}' ];\n\n\tfunction check( v, d ) {\n\t\tif( v === undefined ) return d;\n\t\treturn v;\n\t}\n\n\tTHREE.Material.call( this );\n\n\tparameters = parameters || {};\n\n\tthis.lineWidth = check( parameters.lineWidth, 1 );\n\tthis.map = check( parameters.map, null );\n\tthis.useMap = check( parameters.useMap, 0 );\n\tthis.alphaMap = check( parameters.alphaMap, null );\n\tthis.useAlphaMap = check( parameters.useAlphaMap, 0 );\n\tthis.color = check( parameters.color, new THREE.Color( 0xffffff ) );\n\tthis.opacity = check( parameters.opacity, 1 );\n\tthis.resolution = check( parameters.resolution, new THREE.Vector2( 1, 1 ) );\n\tthis.sizeAttenuation = check( parameters.sizeAttenuation, 1 );\n\tthis.near = check( parameters.near, 1 );\n\tthis.far = check( parameters.far, 1 );\n\tthis.dashArray = check( parameters.dashArray, 0 );\n\tthis.dashOffset = check( parameters.dashOffset, 0 );\n\tthis.dashRatio = check( parameters.dashRatio, 0.5 );\n\tthis.useDash = ( this.dashArray !== 0 ) ? 1 : 0;\n\tthis.visibility = check( parameters.visibility, 1 );\n\tthis.alphaTest = check( parameters.alphaTest, 0 );\n\tthis.repeat = check( parameters.repeat, new THREE.Vector2( 1, 1 ) );\n\n\tvar material = new THREE.RawShaderMaterial( {\n\t\tuniforms:{\n\t\t\tlineWidth: { type: 'f', value: this.lineWidth },\n\t\t\tmap: { type: 't', value: this.map },\n\t\t\tuseMap: { type: 'f', value: this.useMap },\n\t\t\talphaMap: { type: 't', value: this.alphaMap },\n\t\t\tuseAlphaMap: { type: 'f', value: this.useAlphaMap },\n\t\t\tcolor: { type: 'c', value: this.color },\n\t\t\topacity: { type: 'f', value: this.opacity },\n\t\t\tresolution: { type: 'v2', value: this.resolution },\n\t\t\tsizeAttenuation: { type: 'f', value: this.sizeAttenuation },\n\t\t\tnear: { type: 'f', value: this.near },\n\t\t\tfar: { type: 'f', value: this.far },\n\t\t\tdashArray: { type: 'f', value: this.dashArray },\n\t\t\tdashOffset: { type: 'f', value: this.dashOffset },\n\t\t\tdashRatio: { type: 'f', value: this.dashRatio },\n\t\t\tuseDash: { type: 'f', value: this.useDash },\n\t\t\tvisibility: {type: 'f', value: this.visibility},\n\t\t\talphaTest: {type: 'f', value: this.alphaTest},\n\t\t\trepeat: { type: 'v2', value: this.repeat }\n\t\t},\n\t\tvertexShader: vertexShaderSource.join( '\\r\\n' ),\n\t\tfragmentShader: fragmentShaderSource.join( '\\r\\n' )\n\t});\n\n\tdelete parameters.lineWidth;\n\tdelete parameters.map;\n\tdelete parameters.useMap;\n\tdelete parameters.alphaMap;\n\tdelete parameters.useAlphaMap;\n\tdelete parameters.color;\n\tdelete parameters.opacity;\n\tdelete parameters.resolution;\n\tdelete parameters.sizeAttenuation;\n\tdelete parameters.near;\n\tdelete parameters.far;\n\tdelete parameters.dashArray;\n\tdelete parameters.dashOffset;\n\tdelete parameters.dashRatio;\n\tdelete parameters.visibility;\n\tdelete parameters.alphaTest;\n\tdelete parameters.repeat;\n\n\tmaterial.type = 'MeshLineMaterial';\n\n\tmaterial.setValues( parameters );\n\n\treturn material;\n\n};\n\nMeshLineMaterial.prototype = Object.create( THREE.Material.prototype );\nMeshLineMaterial.prototype.constructor = MeshLineMaterial;\n\nMeshLineMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.lineWidth = source.lineWidth;\n\tthis.map = source.map;\n\tthis.useMap = source.useMap;\n\tthis.alphaMap = source.alphaMap;\n\tthis.useAlphaMap = source.useAlphaMap;\n\tthis.color.copy( source.color );\n\tthis.opacity = source.opacity;\n\tthis.resolution.copy( source.resolution );\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\tthis.near = source.near;\n\tthis.far = source.far;\n\tthis.dashArray.copy( source.dashArray );\n\tthis.dashOffset.copy( source.dashOffset );\n\tthis.dashRatio.copy( source.dashRatio );\n\tthis.useDash = source.useDash;\n\tthis.visibility = source.visibility;\n\tthis.alphaTest = source.alphaTest;\n\tthis.repeat.copy( source.repeat );\n\n\treturn this;\n\n};\n\nif( typeof exports !== 'undefined' ) {\n\tif( typeof module !== 'undefined' && module.exports ) {\n\t\texports = module.exports = { MeshLine: MeshLine, MeshLineMaterial: MeshLineMaterial };\n\t}\n\texports.MeshLine = MeshLine;\n\texports.MeshLineMaterial = MeshLineMaterial;\n}\nelse {\n\troot.MeshLine = MeshLine;\n\troot.MeshLineMaterial = MeshLineMaterial;\n}\n\n}).call(this);\n","import { Figure } from \"./Figure\";\nimport { Plot } from \"./internal\";\nimport * as THREE from \"three\";\n\n/**\n* Used for plotting. Can put multiple figures on axes.\n*/\nexport abstract class Axes {\n    private plot: Plot;\n    private container: HTMLElement;\n    private width: number;\n    private height: number;\n    \n    private renderer: THREE.WebGLRenderer;\n    private scene: THREE.Scene;\n    private antialias: boolean;\n    \n    private figures: Set<Figure>;\n    private objMap: Map<Figure, THREE.Object3D>;\n    \n    /**\n    * Creates a new Axes from given args. Throws an error if args are invalid.\n    */\n    public constructor(args: AxesArgs) {\n        args.validate();\n        args.default();\n        this.plot = args.plot;\n        this.container = args.container;\n        this.width = args.width;\n        this.height = args.height;\n        this.antialias = args.antialias;\n        \n        this.renderer = null;\n        this.scene = new THREE.Scene();\n        \n        this.figures = new Set<Figure>();\n        this.objMap = new Map<Figure, THREE.Mesh>();\n\n        this.wake();\n    }\n    \n    /**\n    * Adds the figure to this plot, if its not already there. Will be drawn on next call to render(). \n    * @param figure Figure to add to plot\n    * @returns true if figure was not already present in this axes. false otherwise.\n    */\n    public addFigure(figure: Figure): boolean {\n        if(this.figures.has(figure)) {\n            return false;\n        } else {\n            this.figures.add(figure);\n            this.objMap.set(figure, null);\n            return true;\n        }\n    }\n    \n    /**\n    * Removes the figure from this plot, if it exists. Will be erased on next call to render()\n    * @param figure Figure to remove from plot\n    * @returns true if figure was removed. false if it did not exist\n    */\n    public removeFigure(figure: Figure): boolean {\n        if(!this.figures.has(figure)) {\n            return false;\n        } else {\n            this.figures.delete(figure);\n            this.objMap.delete(figure);\n            return true;\n        }\n    }\n    \n    /**\n    * Forces a figure to recalculate its scene model.\n    * @param figure Figure to refresh\n    */\n    public refresh(figure : Figure): void {\n        let mesh = this.objMap.get(figure);\n        if(mesh != null) {\n            this.scene.remove(mesh);\n        }\n        this.objMap.set(figure, null);\n    }\n    \n    /**\n    * Forces all figures to recalculate their scene models\n    */\n    public refreshAll(): void {\n        for(let figure of this.figures) {\n            this.refresh(figure);\n        }\n    }\n    \n    /**\n    * Draws all figures. Does nothing if the Axes is asleep\n    */\n    public render(): void {\n        // If sleeping, do nothing\n        if(this.renderer == null) {\n            return;\n        }\n        this.recalculate();\n        this.renderer.render(this.scene, this.getCamera());\n    }\n    \n    /**\n    * Removes the GL context from the page to conserve memory.\n    */\n    public sleep(): void {\n        if(this.renderer != null) {\n            this.renderer.forceContextLoss();\n            this.renderer.context = null;\n            this.renderer.domElement = null;        \n            this.renderer = null;\n        }\n    }\n    \n    /**\n    * Restores/creates the GL context.\n    */\n    public wake(): void {\n        if(this.renderer == null) {\n            this.renderer = new THREE.WebGLRenderer({antialias: this.antialias});\n            \n            // Initialize renderer within container\n            this.renderer.setSize(this.width, this.height);\n            this.container.innerHTML = '';\n            this.container.appendChild(this.renderer.domElement);\n        }\n    }\n    \n    /**\n    * Returns the plot that this axes is created on\n    */\n    public getPlot(): Plot {\n        return this.plot;\n    }\n\n    /**\n     * Returns the HTMLELement that this axes is rendered into\n     */\n    public getContainer() : HTMLElement {\n        return this.container;\n    }\n\n    /**\n     * @returns Returns whether or not this axes is sleeping\n     */\n    public isSleeping() : boolean {\n        return this.renderer == null;\n    }\n    \n    protected getRenderer(): THREE.WebGLRenderer {\n        return this.renderer;\n    }\n    \n    protected getScene(): THREE.Scene {\n        return this.scene;\n    }\n\n    protected abstract getCamera(): THREE.Camera;\n    \n    /**\n    * Recalculates the mesh for figures whose mesh have not been calculated,\n    * and adds them to the scene\n    */\n    private recalculate() : void {\n        for(let figure of this.figures) {\n            let mesh = this.objMap.get(figure);\n            if(mesh == null) {\n                mesh = figure.getSceneObject(this.plot.getScope());\n                this.objMap.set(figure, mesh);\n                this.scene.add(mesh);\n            }\n        }\n    }\n}\n\n/**\n* Arguments to use in the creation of Axes. Does not represent an ADT; is more\n* of a JS Object with more security.\n*/\nexport abstract class AxesArgs {\n    public plot: Plot;\n    public container: HTMLElement;\n    \n    public width: number;\n    public height: number;\n    \n    public antialias: boolean;\n    \n    public constructor(args: any) {\n        this.plot = args.plot;\n        this.container = args.container;\n    }\n    \n    /**\n    * Checks if arguments are valid. Returns true if valid. Throws error if not.\n    */\n    public validate(): boolean {\n        if(!this.plot) {\n            throw new Error(\"Invalid arguments: Parent plot not defined!\");\n        }\n        if(!(this.plot instanceof Plot)) {\n            throw new Error(\"Invalid arguments: Parent plot is not an instance of Plot!\");\n        }\n        \n        if(!this.container) {\n            throw new Error(\"Invalid arguments: container (HTMLElement) not defined!\");\n        }\n        if(!(this.container instanceof HTMLElement)) {\n            throw new Error(\"Invalid arguments: container is not an instance of HTMLElement!\");\n        }\n\n        if(this.width === undefined && this.container.clientWidth == 0) {\n            throw new Error(\"Invalid arguments: container has client width 0!\");\n        }\n        if(this.height === undefined && this.container.clientHeight == 0) {\n            throw new Error(\"Invalid arguments: container has client height 0!\");\n        }\n        if(this.width !== undefined && this.width <= 0) {\n            throw new Error(\"Invalid arguments: width <= 0!\");\n        }\n        if(this.height !== undefined && this.height <= 0) {\n            throw new Error(\"Invalid arguments: height <= 0!\");\n        }\n        return true;\n    }\n    \n    /**\n    * Fills in default values for undefined properties\n    */\n    public default(): void {\n        if(this.width === undefined) {\n            this.width = this.container.clientWidth;\n        }\n        if(this.height === undefined) {\n            this.height = this.container.clientHeight;\n        }\n        \n        if(this.antialias === undefined) {\n            this.antialias = false;\n        }\n    }\n}","import { Axes, AxesArgs } from \"./internal\";\nimport * as THREE from \"three\";\nimport { Vector2, Vector3 } from \"three\";\n\n/**\n * An axes where 2D elementds can be plotted.\n * \n * Controls:\n * -    Left click and drag to pan\n */\nexport class Axes2D extends Axes {\n    private camera : THREE.Camera;\n    private left: number;\n    private right: number;\n    private top: number;\n    private bottom: number;\n\n    public constructor(args: Axes2DArgs) {\n        super(args);\n        this.camera = new THREE.OrthographicCamera(args.left, args.right, args.top, args.bottom, 0, 20);\n        this.camera.position.z = 10;\n        this.camera.lookAt(this.getScene().position);\n\n        this.left = args.left;\n        this.right = args.right;\n        this.top = args.top;\n        this.bottom = args.bottom;\n\n        let self_ = this;\n\n        let clientPosStart : Array<number> = null;\n        let cameraPosStart : Vector3 = null\n        let onPanStart = function(clientX: number, clientY: number) {\n            clientPosStart = [clientX, clientY];\n            cameraPosStart = self_.camera.position.clone();\n        }\n\n        let onPan = function(clientX: number, clientY: number) {\n            let clientBounds = self_.getContainer().getBoundingClientRect();\n            let clientDiff = [clientX - clientPosStart[0], clientY - clientPosStart[1]];\n            \n            let cameraDim = [self_.right - self_.left, self_.top - self_.bottom];\n            let cameraDiff = [clientDiff[0] / clientBounds.width * cameraDim[0], clientDiff[1] / clientBounds.height * cameraDim[1]];\n\n            self_.camera.position.x = cameraPosStart.x - cameraDiff[0];\n            self_.camera.position.y = cameraPosStart.y + cameraDiff[1];\n\n            self_.camera.updateMatrix();\n        }\n\n        let onPanEnd = function(clientX: number, clientY: number) {\n            clientPosStart = null;\n            cameraPosStart = null;\n        }\n\n        this.getContainer().addEventListener('mousedown', (e) => {\n            if(e.buttons & 1) {\n                onPanStart(e.clientX, e.clientY);\n            }\n        });\n\n        this.getContainer().addEventListener('mousemove', (e) => {\n            if(e.buttons & 1) {\n                onPan(e.clientX, e.clientY);\n            }\n        })\n\n        this.getContainer().addEventListener('mouseup', (e) => {\n            if(e.buttons & 1) {\n                onPanEnd(e.clientX, e.clientY);\n            }\n        })\n    }\n\n    protected getCamera() : THREE.Camera {\n        return this.camera;\n    }\n}\n\nexport class Axes2DArgs extends AxesArgs {\n    public left : number;\n    public right : number;\n    public top : number;\n    public bottom : number;\n    \n    public constructor(args: any) {\n        super(args);\n        this.left = args.left;\n        this.right = args.right;\n        this.top = args.top;\n        this.bottom = args.bottom;\n    }\n    \n    public validate() : boolean {\n        super.validate();\n        if(this.right !== undefined && this.left !== undefined && this.right - this.left <= 0) {\n            throw new Error(\"Invalid arguments: left >= right.\");\n        }\n        \n        if(this.top !== undefined && this.bottom !== undefined && this.top - this.bottom <= 0) {\n            throw new Error(\"Invalid arguments: top <= bottom.\");\n        }\n        return true;\n    }\n    \n    public default() : void {\n        super.default();\n        if(this.left === undefined) {\n            this.left = -10;\n        }\n        if(this.right=== undefined) {\n            this.right = 10;\n        }\n        if(this.top === undefined) {\n            this.top = 10;\n        }\n        if(this.bottom === undefined) {\n            this.bottom = -10;\n        }\n    }\n\n    \n}","import { Axes, AxesArgs } from \"./internal\";\nimport * as THREE from \"three\";\n\nexport class Axes3D extends Axes {\n    private camera : THREE.Camera;\n    public constructor(args: Axes3DArgs) {\n        super(args);\n        this.camera = new THREE.PerspectiveCamera();\n    }\n\n    public getCamera(): THREE.Camera {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n\nexport class Axes3DArgs extends AxesArgs {\n}","import { Axes, Axes2D, Axes2DArgs, Axes3D, Axes3DArgs } from './internal';\nimport * as math from 'mathjs';\n\n/**\n * A controller for a plot. Can contain several axes, which can in turn contain\n * several figures. Each plot contains its own context on which expression are\n * evaluates/executed\n */\nexport class Plot {\n    private axes : Set<Axes>;\n    private scope : any;\n\n    public constructor() {\n        this.axes = new Set<Axes>();\n        this.scope = {};\n    }\n\n    /**\n     * Creates a new 2D axes from given arguments\n     * @param args \n     */\n    public createAxes2D(args: any): Axes2D {\n        let axesArgs = new Axes2DArgs(args);\n        axesArgs.plot = this;\n\n        let newAxes = new Axes2D(axesArgs);\n        this.addAxes(newAxes);\n        return newAxes;\n    }\n\n    /**\n     * Creates a new 2D axes from given arguments\n     * @param args \n     */\n    public createAxes3D(args: any): Axes3D {\n        let axesArgs = new Axes3DArgs(args);\n        axesArgs.plot = this;\n\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /**\n     * Removes the axes if it is present.\n     * @param axes \n     * @returns true is axes was removed. false if it did not exist.\n     */\n    public dropAxes(axes: Axes): boolean {\n        return this.axes.delete(axes);\n    }\n\n    /**\n     * Renders all axes that are awake\n     */\n    public render() : void {\n        for(let ax of this.axes) {\n            if(!ax.isSleeping()) {\n                ax.render();\n            }\n        }\n    }\n\n    /**\n     * Disposes all GL contexts hosted by this plot\n     */\n    public sleep(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /**\n     * Re-instances the GL contexts\n     */\n    public wake(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /**\n     * Executes an expression\n     */\n    public execExpression(expr: string) : any {\n        math.eval(expr, this.scope);\n    }\n\n    /**\n     * Returns the scope used in evaluating expresions. Due to limitations on\n     * how Javascript copies objects, it just returns a shallow copy.\n     */\n    public getScope() : any {\n        return Object.create(this.scope);\n    }\n\n    /**\n     * Adds specified axes to graph. \n     * @param axes\n     */\n    private addAxes(axes: Axes): void {\n        this.axes.add(axes);\n    }\n}","// Makes sure modules load in the correct order \nexport * from './Axes';\nexport * from './Axes2D';\nexport * from './Axes3D';\nexport * from './Plot';","import { Figure } from '../core/Figure';\nimport { Vector3, Mesh, ArrowHelper, Object3D } from 'three';\nimport * as math from 'mathjs';\n\nexport class Arrow2D implements Figure {\n    private startFun : math.EvalFunction;\n    private endFun: math.EvalFunction;\n    private hex: number;\n    private headLength: number;\n    private headWidth: number;\n    \n    public constructor(args: any) {\n        let args2 = new Arrow2DArgs(args); \n        args2.validate();\n        args2.default();\n        \n        let startNode = math.parse(args2.start);\n        if(math.typeof(startNode) != 'ArrayNode') {\n            throw new Error(\"Invalid arguments: Start vector expression is not a vector (array)!\");\n        } else {\n            this.startFun = startNode.compile();\n        }\n\n        let endNode = math.parse(args2.end);\n        if(math.typeof(endNode) != 'ArrayNode') {\n            throw new Error(\"Invalid arguments: End vector expression is not a vector (array)!\");\n        } else {\n            this.endFun = endNode.compile();\n        }\n\n        this.hex = args2.hex;\n        this.headLength = args2.headLength;\n        this.headWidth = args2.headWidth;\n    }\n    \n    public getSceneObject(scope : any) : Object3D {\n        let end = this.endFun.eval(scope);\n        let endVec = new Vector3(end._data[0], end._data[1], 0);\n        \n        let start = this.startFun.eval(scope);\n        let startVec = new Vector3(start._data[0], start._data[1], 0);\n\n        let dir = endVec.clone().sub(startVec).normalize();\n        let length = endVec.distanceTo(startVec);\n\n        let hex = this.hex;\n        let headLength = this.headLength * length;\n        let headWidth = this.headWidth * headLength;     \n        \n        return new ArrowHelper(dir, startVec, length, hex, headLength, headWidth);\n    }\n}\n\nexport class Arrow2DArgs {\n    public start : string;\n    public end : string;\n    public hex : number;\n    public headLength : number;\n    public headWidth : number;\n    \n    public constructor(args : any) {\n        this.start = args.start;\n        this.end = args.end;\n        this.hex = args.hex;\n        this.headLength = args.headLength;\n        this.headWidth = args.headWidth;\n    }\n    \n    public validate() : boolean {\n        if(!this.end) {\n            throw new Error(\"Invalid arguments: end not defined!\");\n        }\n        return true;\n    }\n    \n    public default() : void {\n        let args : any = {};\n        if (this.start === undefined) {\n            this.start = '[0,0]';\n        }\n        if (this.hex === undefined) {\n            this.hex = 0xffffff;\n        }\n        if(this.headLength === undefined) {\n            this.headLength = 0.2;\n        }\n        if(this.headWidth === undefined) {\n            this.headWidth = 0.5;\n        }\n    }\n}","import { Figure } from '../core/Figure';\nimport { MeshLine, MeshLineMaterial } from 'three.meshline';\nimport { Object3D } from 'three';\n\nexport class Parametric2D implements Figure {\n\n    public getSceneObject(scope?: any) : Object3D {\n        new MeshLine();\n        return null;\n    }\n\n}","export { Axes2D, Axes2DArgs, Axes3D, Axes3DArgs, Plot } from './core/internal';\nexport { Arrow2D, Arrow2DArgs } from './figures/Arrow2D';\nexport { Parametric2D } from './figures/Parametric2D'; ","module.exports = math;","module.exports = THREE;"],"sourceRoot":""}