{"version":3,"sources":["webpack://Interactive/webpack/bootstrap","webpack://Interactive/./node_modules/three.meshline/src/THREE.MeshLine.js","webpack://Interactive/./src/core/Axes.ts","webpack://Interactive/./src/core/Axes2D.ts","webpack://Interactive/./src/core/Axes3D.ts","webpack://Interactive/./src/core/Panel.tsx","webpack://Interactive/./src/core/Plot.ts","webpack://Interactive/./src/core/internal.ts","webpack://Interactive/./src/figures/AngleArc2D.ts","webpack://Interactive/./src/figures/Arrow2D.ts","webpack://Interactive/./src/figures/Hotspot2D.ts","webpack://Interactive/./src/figures/Label2D.ts","webpack://Interactive/./src/figures/Parallelogram2D.ts","webpack://Interactive/./src/figures/Parametric2D.ts","webpack://Interactive/./src/figures/Point2D.ts","webpack://Interactive/./src/figures/Polygon2D.ts","webpack://Interactive/./src/index.ts","webpack://Interactive/./src/utils/LineArrowHelper.ts","webpack://Interactive/./src/utils/Utils.ts","webpack://Interactive/external \"math\"","webpack://Interactive/external \"React\"","webpack://Interactive/external \"ReactDOM\"","webpack://Interactive/external \"THREE\""],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,CAAC;;AAED;;AAEA;;AAEA,kBAAkB,UAAc;;AAEhC,yCAAyC,mBAAO,CAAC,oBAAO;AACxD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;;AAEA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF,WAAW,cAAc;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB;AACvB;AACA,yBAAyB;AACzB,sBAAsB;AACtB,yBAAyB;AACzB,qBAAqB;AACrB,sBAAsB;AACtB,uBAAuB;AACvB,mBAAmB;AACnB,0BAA0B;AAC1B;AACA,+BAA+B;AAC/B,8BAA8B;AAC9B,yBAAyB;AACzB,yBAAyB;AACzB,8BAA8B;AAC9B,qBAAqB;AACrB,wBAAwB;AACxB,oBAAoB;AACpB,mBAAmB;AACnB,+BAA+B;AAC/B;AACA,kBAAkB;AAClB,qBAAqB;AACrB,yBAAyB;AACzB;AACA,mCAAmC;AACnC;AACA,2BAA2B;AAC3B,qBAAqB;AACrB,wBAAwB;AACxB,gBAAgB;AAChB;AACA,EAAE;AACF;AACA,cAAc;AACd;AACA,gDAAgD;AAChD,wEAAwE;AACxE;AACA,gCAAgC;AAChC,2CAA2C;AAC3C,MAAM,OAAO;AACb,wBAAwB;AACxB,MAAM;AACN;AACA,cAAc;AACd;AACA,iDAAiD;AACjD,oDAAoD;AACpD,8CAA8C;AAC9C,0CAA0C;AAC1C;AACA,kDAAkD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","file":"interactive.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n",";(function() {\n\n\"use strict\";\n\nvar root = this\n\nvar has_require = typeof require !== 'undefined'\n\nvar THREE = root.THREE || has_require && require('three')\nif( !THREE )\n\tthrow new Error( 'MeshLine requires three.js' )\n\nfunction MeshLine() {\n\n\tthis.positions = [];\n\tthis.colors = [];\n\n\tthis.previous = [];\n\tthis.next = [];\n\tthis.side = [];\n\tthis.width = [];\n\tthis.indices_array = [];\n\tthis.uvs = [];\n\tthis.counters = [];\n\tthis.geometry = new THREE.BufferGeometry();\n\n\tthis.widthCallback = null;\n\n}\n\nMeshLine.prototype.setGeometry = function( g, c ) {\n\n\tthis.widthCallback = c;\n\n\tthis.positions = [];\n\tthis.counters = [];\n\n\tif( g instanceof THREE.Geometry ) {\n\t\tfor( var j = 0; j < g.vertices.length; j++ ) {\n\t\t\tvar v = g.vertices[ j ];\n\t\t\tvar c = j/g.vertices.length;\n\t\t\tthis.positions.push( v.x, v.y, v.z );\n\t\t\tthis.positions.push( v.x, v.y, v.z );\n\t\t\tthis.colors.push( 0, 0, 0, 0 );\n\t\t\tthis.colors.push( 0, 0, 0, 0 );\n\t\t\tthis.counters.push(c);\n\t\t\tthis.counters.push(c);\n\t\t}\n\t}\n\n\tif( g instanceof THREE.BufferGeometry ) {\n\t\tvar verts = g.getAttribute('position').array;\n\t\tvar colors = g.getAttribute('color').array;\n\n\t\tfor( var j = 0; j*3 < verts.length; j += 1 ) {\n\t\t\tvar c = j*3/verts.length;\n\t\t\tthis.positions.push( verts[ j*3 ], verts[ j*3 + 1 ], verts[ j*3 + 2 ] );\n\t\t\tthis.positions.push( verts[ j*3 ], verts[ j*3 + 1 ], verts[ j*3 + 2 ] );\n\t\t\tthis.colors.push( colors[ j*4 ], colors[ j*4 + 1 ], colors[ j*4 + 2 ], colors[ j*4 + 3 ] );\n\t\t\tthis.colors.push( colors[ j*4 ], colors[ j*4 + 1 ], colors[ j*4 + 2 ], colors[ j*4 + 3 ] );\n\t\t\tthis.counters.push(c);\n\t\t\tthis.counters.push(c);\n\t\t}\n\t}\n\n\tif( g instanceof Float32Array || g instanceof Array ) {\n\t\tfor( var j = 0; j < g.length; j += 3 ) {\n\t\t\tvar c = j/g.length;\n\t\t\tthis.positions.push( g[ j ], g[ j + 1 ], g[ j + 2 ] );\n\t\t\tthis.positions.push( g[ j ], g[ j + 1 ], g[ j + 2 ] );\n\t\t\tthis.colors.push( 0, 0, 0, 0 );\n\t\t\tthis.colors.push( 0, 0, 0, 0 );\n\t\t\tthis.counters.push(c);\n\t\t\tthis.counters.push(c);\n\t\t}\n\t}\n\n\tthis.process();\n\n}\n\nMeshLine.prototype.compareV3 = function( a, b ) {\n\n\tvar aa = a * 6;\n\tvar ab = b * 6;\n\treturn ( this.positions[ aa ] === this.positions[ ab ] ) && ( this.positions[ aa + 1 ] === this.positions[ ab + 1 ] ) && ( this.positions[ aa + 2 ] === this.positions[ ab + 2 ] );\n\n}\n\nMeshLine.prototype.copyV3 = function( a ) {\n\n\tvar aa = a * 6;\n\treturn [ this.positions[ aa ], this.positions[ aa + 1 ], this.positions[ aa + 2 ] ];\n\n}\n\nMeshLine.prototype.process = function() {\n\n\tvar l = this.positions.length / 6;\n\n\tthis.previous = [];\n\tthis.next = [];\n\tthis.side = [];\n\tthis.width = [];\n\tthis.indices_array = [];\n\tthis.uvs = [];\n\n\tfor( var j = 0; j < l; j++ ) {\n\t\tthis.side.push( 1 );\n\t\tthis.side.push( -1 );\n\t}\n\n\tvar w;\n\tfor( var j = 0; j < l; j++ ) {\n\t\tif( this.widthCallback ) w = this.widthCallback( j / ( l -1 ) );\n\t\telse w = 1;\n\t\tthis.width.push( w );\n\t\tthis.width.push( w );\n\t}\n\n\tfor( var j = 0; j < l; j++ ) {\n\t\tthis.uvs.push( j / ( l - 1 ), 0 );\n\t\tthis.uvs.push( j / ( l - 1 ), 1 );\n\t}\n\n\tvar v;\n\n\tif( this.compareV3( 0, l - 1 ) ){\n\t\tv = this.copyV3( l - 2 );\n\t} else {\n\t\tv = this.copyV3( 0 );\n\t}\n\tthis.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\tthis.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\tfor( var j = 0; j < l - 1; j++ ) {\n\t\tv = this.copyV3( j );\n\t\tthis.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\t\tthis.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\t}\n\n\tfor( var j = 1; j < l; j++ ) {\n\t\tv = this.copyV3( j );\n\t\tthis.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\t\tthis.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\t}\n\n\tif( this.compareV3( l - 1, 0 ) ){\n\t\tv = this.copyV3( 1 );\n\t} else {\n\t\tv = this.copyV3( l - 1 );\n\t}\n\tthis.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\tthis.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\n\tfor( var j = 0; j < l - 1; j++ ) {\n\t\tvar n = j * 2;\n\t\tthis.indices_array.push( n, n + 1, n + 2 );\n\t\tthis.indices_array.push( n + 2, n + 1, n + 3 );\n\t}\n\n\tif (!this.attributes) {\n\t\tthis.attributes = {\n\t\t\tposition: new THREE.BufferAttribute( new Float32Array( this.positions ), 3 ),\n\t\t\tcolor: new THREE.BufferAttribute(new Float32Array( this.colors ), 4 ),\n\t\t\tprevious: new THREE.BufferAttribute( new Float32Array( this.previous ), 3 ),\n\t\t\tnext: new THREE.BufferAttribute( new Float32Array( this.next ), 3 ),\n\t\t\tside: new THREE.BufferAttribute( new Float32Array( this.side ), 1 ),\n\t\t\twidth: new THREE.BufferAttribute( new Float32Array( this.width ), 1 ),\n\t\t\tuv: new THREE.BufferAttribute( new Float32Array( this.uvs ), 2 ),\n\t\t\tindex: new THREE.BufferAttribute( new Uint16Array( this.indices_array ), 1 ),\n\t\t\tcounters: new THREE.BufferAttribute( new Float32Array( this.counters ), 1 )\n\t\t}\n\t} else {\n\t\tthis.attributes.position.copyArray(new Float32Array(this.positions));\n\t\tthis.attributes.position.needsUpdate = true;\n\t\tthis.attributes.color.copyArray(new Float32Array(this.colors));\n\t\tthis.attributes.color.needsUpdate = true;\n\t\tthis.attributes.previous.copyArray(new Float32Array(this.previous));\n\t\tthis.attributes.previous.needsUpdate = true;\n\t\tthis.attributes.next.copyArray(new Float32Array(this.next));\n\t\tthis.attributes.next.needsUpdate = true;\n\t\tthis.attributes.side.copyArray(new Float32Array(this.side));\n\t\tthis.attributes.side.needsUpdate = true;\n\t\tthis.attributes.width.copyArray(new Float32Array(this.width));\n\t\tthis.attributes.width.needsUpdate = true;\n\t\tthis.attributes.uv.copyArray(new Float32Array(this.uvs));\n\t\tthis.attributes.uv.needsUpdate = true;\n\t\tthis.attributes.index.copyArray(new Uint16Array(this.indices_array));\n\t\tthis.attributes.index.needsUpdate = true;\n    }\n\n\tthis.geometry.addAttribute( 'position', this.attributes.position );\n\tthis.geometry.addAttribute( 'color', this.attributes.color );\n\tthis.geometry.addAttribute( 'previous', this.attributes.previous );\n\tthis.geometry.addAttribute( 'next', this.attributes.next );\n\tthis.geometry.addAttribute( 'side', this.attributes.side );\n\tthis.geometry.addAttribute( 'width', this.attributes.width );\n\tthis.geometry.addAttribute( 'uv', this.attributes.uv );\n\tthis.geometry.addAttribute( 'counters', this.attributes.counters );\n\n\tthis.geometry.setIndex( this.attributes.index );\n\n}\n\nfunction memcpy (src, srcOffset, dst, dstOffset, length) {\n\tvar i\n\n\tsrc = src.subarray || src.slice ? src : src.buffer\n\tdst = dst.subarray || dst.slice ? dst : dst.buffer\n\n\tsrc = srcOffset ? src.subarray ?\n\tsrc.subarray(srcOffset, length && srcOffset + length) :\n\tsrc.slice(srcOffset, length && srcOffset + length) : src\n\n\tif (dst.set) {\n\t\tdst.set(src, dstOffset)\n\t} else {\n\t\tfor (i=0; i<src.length; i++) {\n\t\t\tdst[i + dstOffset] = src[i]\n\t\t}\n\t}\n\n\treturn dst\n}\n\n/**\n * Fast method to advance the line by one position.  The oldest position is removed.\n * @param position\n */\nMeshLine.prototype.advance = function(position) {\n\n\tvar positions = this.attributes.position.array;\n\tvar previous = this.attributes.previous.array;\n\tvar next = this.attributes.next.array;\n\tvar l = positions.length;\n\n\t// PREVIOUS\n\tmemcpy( positions, 0, previous, 0, l );\n\n\t// POSITIONS\n\tmemcpy( positions, 6, positions, 0, l - 6 );\n\n\tpositions[l - 6] = position.x;\n\tpositions[l - 5] = position.y;\n\tpositions[l - 4] = position.z;\n\tpositions[l - 3] = position.x;\n\tpositions[l - 2] = position.y;\n\tpositions[l - 1] = position.z;\n\n    // NEXT\n\tmemcpy( positions, 6, next, 0, l - 6 );\n\n\tnext[l - 6]  = position.x;\n\tnext[l - 5]  = position.y;\n\tnext[l - 4]  = position.z;\n\tnext[l - 3]  = position.x;\n\tnext[l - 2]  = position.y;\n\tnext[l - 1]  = position.z;\n\n\tthis.attributes.position.needsUpdate = true;\n\tthis.attributes.previous.needsUpdate = true;\n\tthis.attributes.next.needsUpdate = true;\n\n};\n\nfunction MeshLineMaterial( parameters ) {\n\n\tvar vertexShaderSource = [\n'precision highp float;',\n'',\n'attribute vec3 position;',\n'attribute vec4 color;',\n'attribute vec3 previous;',\n'attribute vec3 next;',\n'attribute float side;',\n'attribute float width;',\n'attribute vec2 uv;',\n'attribute float counters;',\n'',\n'uniform mat4 projectionMatrix;',\n'uniform mat4 modelViewMatrix;',\n'uniform vec2 resolution;',\n'uniform float lineWidth;',\n'uniform float useGlobalColor;',\n'uniform vec3 gcolor;',\n'uniform float gopacity;',\n'uniform float near;',\n'uniform float far;',\n'uniform float sizeAttenuation;',\n'',\n'varying vec2 vUV;',\n'varying vec4 vColor;',\n'varying float vCounters;',\n'',\n'vec2 fix( vec4 i, float aspect ) {',\n'',\n'    vec2 res = i.xy / i.w;',\n'    res.x *= aspect;',\n'\t vCounters = counters;',\n'    return res;',\n'',\n'}',\n'',\n'void main() {',\n'',\n'    float aspect = resolution.x / resolution.y;',\n'\t float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);',\n'',\n'    if(useGlobalColor == 1.0) {',\n'        vColor = vec4( gcolor, gopacity );',\n'    } else {',\n'        vColor = color;',\n'    }',\n'',\n'    vUV = uv;',\n'',\n'    mat4 m = projectionMatrix * modelViewMatrix;',\n'    vec4 finalPosition = m * vec4( position, 1.0 );',\n'    vec4 prevPos = m * vec4( previous, 1.0 );',\n'    vec4 nextPos = m * vec4( next, 1.0 );',\n'',\n'    vec2 currentP = fix( finalPosition, aspect );',\n'    vec2 prevP = fix( prevPos, aspect );',\n'    vec2 nextP = fix( nextPos, aspect );',\n'',\n'\t float pixelWidth = finalPosition.w * pixelWidthRatio;',\n'    float w = 1.8 * pixelWidth * lineWidth * width;',\n'',\n'    if( sizeAttenuation == 1. ) {',\n'        w = 1.8 * lineWidth * width;',\n'    }',\n'',\n'    vec2 dir;',\n'    if( nextP == currentP ) dir = normalize( currentP - prevP );',\n'    else if( prevP == currentP ) dir = normalize( nextP - currentP );',\n'    else {',\n'        vec2 dir1 = normalize( currentP - prevP );',\n'        vec2 dir2 = normalize( nextP - currentP );',\n'        dir = normalize( dir1 + dir2 );',\n'',\n'        vec2 perp = vec2( -dir1.y, dir1.x );',\n'        vec2 miter = vec2( -dir.y, dir.x );',\n'        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );',\n'',\n'    }',\n'',\n'    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;',\n'    vec2 normal = vec2( -dir.y, dir.x );',\n'    normal.x /= aspect;',\n'    normal *= .5 * w;',\n'',\n'    vec4 offset = vec4( normal * side, 0.0, 1.0 );',\n'    finalPosition.xy += offset.xy;',\n'',\n'    gl_Position = finalPosition;',\n'',\n'}' ];\n\n\tvar fragmentShaderSource = [\n\t\t'#extension GL_OES_standard_derivatives : enable',\n'precision mediump float;',\n'',\n'uniform sampler2D map;',\n'uniform sampler2D alphaMap;',\n'uniform float useMap;',\n'uniform float useAlphaMap;',\n'uniform float useDash;',\n'uniform float dashArray;',\n'uniform float dashOffset;',\n'uniform float dashRatio;',\n'uniform float visibility;',\n'uniform float alphaTest;',\n'uniform vec2 repeat;',\n'',\n'varying vec2 vUV;',\n'varying vec4 vColor;',\n'varying float vCounters;',\n'',\n'void main() {',\n'',\n'    vec4 c = vColor;',\n'    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );',\n'    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;',\n'    if( c.a < alphaTest ) discard;',\n'    if( useDash == 1. ){',\n'        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));',\n'    }',\n'    gl_FragColor = c;',\n'    gl_FragColor.a *= step(vCounters, visibility);',\n'}' ];\n\n\tfunction check( v, d ) {\n\t\tif( v === undefined ) return d;\n\t\treturn v;\n\t}\n\n\tTHREE.Material.call( this );\n\n\tparameters = parameters || {};\n\n\tthis.lineWidth = check( parameters.lineWidth, 1 );\n\tthis.map = check( parameters.map, null );\n\tthis.useMap = check( parameters.useMap, 0 );\n\tthis.alphaMap = check( parameters.alphaMap, null );\n\tthis.useAlphaMap = check( parameters.useAlphaMap, 0 );\n\tthis.useGlobalColor = check( parameters.useGlobalColor, 1 );\n\tthis.color = check( parameters.color, new THREE.Color( 0xffffff ) );\n\tthis.opacity = check( parameters.opacity, 1 );\n\tthis.resolution = check( parameters.resolution, new THREE.Vector2( 1, 1 ) );\n\tthis.sizeAttenuation = check( parameters.sizeAttenuation, 1 );\n\tthis.near = check( parameters.near, 1 );\n\tthis.far = check( parameters.far, 1 );\n\tthis.dashArray = check( parameters.dashArray, 0 );\n\tthis.dashOffset = check( parameters.dashOffset, 0 );\n\tthis.dashRatio = check( parameters.dashRatio, 0.5 );\n\tthis.useDash = ( this.dashArray !== 0 ) ? 1 : 0;\n\tthis.visibility = check( parameters.visibility, 1 );\n\tthis.alphaTest = check( parameters.alphaTest, 0 );\n\tthis.repeat = check( parameters.repeat, new THREE.Vector2( 1, 1 ) );\n\n\tvar material = new THREE.RawShaderMaterial( {\n\t\tuniforms:{\n\t\t\tlineWidth: { type: 'f', value: this.lineWidth },\n\t\t\tmap: { type: 't', value: this.map },\n\t\t\tuseMap: { type: 'f', value: this.useMap },\n\t\t\talphaMap: { type: 't', value: this.alphaMap },\n\t\t\tuseAlphaMap: { type: 'f', value: this.useAlphaMap },\n\t\t\tuseGlobalColor: {type: 'f', value: this.useGlobalColor },\n\t\t\tgcolor: { type: 'c', value: this.color },\n\t\t\tgopacity: { type: 'f', value: this.opacity },\n\t\t\tresolution: { type: 'v2', value: this.resolution },\n\t\t\tsizeAttenuation: { type: 'f', value: this.sizeAttenuation },\n\t\t\tnear: { type: 'f', value: this.near },\n\t\t\tfar: { type: 'f', value: this.far },\n\t\t\tdashArray: { type: 'f', value: this.dashArray },\n\t\t\tdashOffset: { type: 'f', value: this.dashOffset },\n\t\t\tdashRatio: { type: 'f', value: this.dashRatio },\n\t\t\tuseDash: { type: 'f', value: this.useDash },\n\t\t\tvisibility: {type: 'f', value: this.visibility},\n\t\t\talphaTest: {type: 'f', value: this.alphaTest},\n\t\t\trepeat: { type: 'v2', value: this.repeat }\n\t\t},\n\t\tvertexShader: vertexShaderSource.join( '\\r\\n' ),\n\t\tfragmentShader: fragmentShaderSource.join( '\\r\\n' )\n\t});\n\n\tdelete parameters.lineWidth;\n\tdelete parameters.map;\n\tdelete parameters.useMap;\n\tdelete parameters.alphaMap;\n\tdelete parameters.useAlphaMap;\n\tdelete parameters.useGlobalColor;\n\tdelete parameters.color;\n\tdelete parameters.opacity;\n\tdelete parameters.resolution;\n\tdelete parameters.sizeAttenuation;\n\tdelete parameters.near;\n\tdelete parameters.far;\n\tdelete parameters.dashArray;\n\tdelete parameters.dashOffset;\n\tdelete parameters.dashRatio;\n\tdelete parameters.visibility;\n\tdelete parameters.alphaTest;\n\tdelete parameters.repeat;\n\n\tmaterial.type = 'MeshLineMaterial';\n\n\tmaterial.setValues( parameters );\n\n\treturn material;\n\n};\n\nMeshLineMaterial.prototype = Object.create( THREE.Material.prototype );\nMeshLineMaterial.prototype.constructor = MeshLineMaterial;\n\nMeshLineMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.lineWidth = source.lineWidth;\n\tthis.map = source.map;\n\tthis.useMap = source.useMap;\n\tthis.alphaMap = source.alphaMap;\n\tthis.useAlphaMap = source.useAlphaMap;\n\tthis.useGlobalColor = check( parameters.useGlobalColor, 1);\n\tthis.color.copy( source.color );\n\tthis.opacity = source.opacity;\n\tthis.resolution.copy( source.resolution );\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\tthis.near = source.near;\n\tthis.far = source.far;\n\tthis.dashArray.copy( source.dashArray );\n\tthis.dashOffset.copy( source.dashOffset );\n\tthis.dashRatio.copy( source.dashRatio );\n\tthis.useDash = source.useDash;\n\tthis.visibility = source.visibility;\n\tthis.alphaTest = source.alphaTest;\n\tthis.repeat.copy( source.repeat );\n\n\treturn this;\n\n};\n\nif( typeof exports !== 'undefined' ) {\n\tif( typeof module !== 'undefined' && module.exports ) {\n\t\texports = module.exports = { MeshLine: MeshLine, MeshLineMaterial: MeshLineMaterial };\n\t}\n\texports.MeshLine = MeshLine;\n\texports.MeshLineMaterial = MeshLineMaterial;\n}\nelse {\n\troot.MeshLine = MeshLine;\n\troot.MeshLineMaterial = MeshLineMaterial;\n}\n\n}).call(this);\n","import { Figure } from \"./Figure\";\r\nimport { Plot } from \"./internal\";\r\nimport * as THREE from \"three\";\r\n\r\n/**\r\n* Used for plotting. Can put multiple figures on axes.\r\n*/\r\nexport abstract class Axes {\r\n    private plot: Plot;\r\n    private container: HTMLElement;\r\n    private width: number;\r\n    private height: number;\r\n    \r\n    private renderer: THREE.WebGLRenderer;\r\n    private scene: THREE.Scene;\r\n    private antialias: boolean;\r\n    \r\n    private figures: Set<Figure>;\r\n    private objMap: Map<Figure, THREE.Object3D>;\r\n    private skip: Set<Figure>; // Figures to skip when recalculating\r\n    \r\n    /**\r\n    * Creates a new Axes from given args. Throws an error if args are invalid.\r\n    */\r\n    public constructor(args: AxesArgs) {\r\n        args.validate();\r\n        args.default();\r\n        this.plot = args.plot;\r\n        this.container = args.container;\r\n        this.width = args.width;\r\n        this.height = args.height;\r\n        this.antialias = args.antialias;\r\n        \r\n        this.renderer = null;\r\n        this.scene = new THREE.Scene();\r\n        \r\n        this.figures = new Set<Figure>();\r\n        this.objMap = new Map<Figure, THREE.Mesh>();\r\n        this.skip = new Set<Figure>();\r\n        \r\n        this.wake();\r\n    }\r\n    \r\n    /**\r\n    * Adds the figure to this plot, if its not already there. Will be drawn on next call to render(). \r\n    * @param figure Figure to add to plot\r\n    * @returns true if figure was not already present in this axes. false otherwise.\r\n    */\r\n    public addFigure(figure: Figure): boolean {\r\n        if(this.figures.has(figure)) {\r\n            return false;\r\n        } else {\r\n            this.figures.add(figure);\r\n            this.objMap.set(figure, null);\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    /**\r\n    * Removes the figure from this plot, if it exists. Will be erased on next call to render()\r\n    * @param figure Figure to remove from plot\r\n    * @returns true if figure was removed. false if it did not exist\r\n    */\r\n    public removeFigure(figure: Figure): boolean {\r\n        if(!this.figures.has(figure)) {\r\n            return false;\r\n        } else {\r\n            this.figures.delete(figure);\r\n            this.objMap.delete(figure);\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    /**\r\n    * Forces a figure to recalculate its scene model.\r\n    * @param figure Figure to refresh\r\n    */\r\n    public refresh(figure : Figure): void {\r\n        let mesh = this.objMap.get(figure);\r\n        if(mesh != null) {\r\n            this.scene.remove(mesh);\r\n        }\r\n        this.objMap.set(figure, null);\r\n        this.skip.delete(figure);\r\n    }\r\n    \r\n    /**\r\n    * Forces all figures to recalculate their scene models\r\n    */\r\n    public refreshAll(): void {\r\n        for(let figure of this.figures) {\r\n            this.refresh(figure);\r\n        }\r\n    }\r\n    \r\n    /**\r\n    * Draws all figures. Does nothing if the Axes is asleep\r\n    */\r\n    public render(): void {\r\n        // If sleeping, do nothing\r\n        if(this.renderer == null) {\r\n            return;\r\n        }\r\n        this.recalculate();\r\n        this.renderer.render(this.scene, this.getCamera());\r\n    }\r\n    \r\n    /**\r\n    * Removes the GL context from the page to conserve memory.\r\n    */\r\n    public sleep(): void {\r\n        if(this.renderer != null) {\r\n            this.renderer.forceContextLoss();\r\n            this.renderer.context = null;\r\n            this.renderer.domElement = null;        \r\n            this.renderer = null;\r\n        }\r\n    }\r\n    \r\n    /**\r\n    * Restores/creates the GL context.\r\n    */\r\n    public wake(): void {\r\n        if(this.renderer == null) {\r\n            this.renderer = new THREE.WebGLRenderer({antialias: this.antialias});\r\n            \r\n            // Initialize renderer within container\r\n            this.renderer.setSize(this.width, this.height);\r\n            this.container.innerHTML = '';\r\n            this.container.appendChild(this.renderer.domElement);\r\n        }\r\n    }\r\n    \r\n    /**\r\n    * Returns the plot that this axes is created on\r\n    */\r\n    public getPlot(): Plot {\r\n        return this.plot;\r\n    }\r\n    \r\n    /**\r\n    * Returns the HTMLELement that this axes is rendered into\r\n    */\r\n    public getContainer() : HTMLElement {\r\n        return this.container;\r\n    }\r\n    \r\n    /**\r\n    * @returns Returns whether or not this axes is sleeping\r\n    */\r\n    public isSleeping() : boolean {\r\n        return this.renderer == null;\r\n    }\r\n    \r\n    protected getRenderer(): THREE.WebGLRenderer {\r\n        return this.renderer;\r\n    }\r\n    \r\n    protected getScene(): THREE.Scene {\r\n        return this.scene;\r\n    }\r\n    \r\n    protected abstract getCamera(): THREE.Camera;\r\n    \r\n    /**\r\n    * Recalculates the mesh for figures whose mesh have not been calculated,\r\n    * and adds them to the scene\r\n    */\r\n    private recalculate() : void {\r\n        for(let figure of this.figures) {\r\n            let mesh = this.objMap.get(figure);\r\n            if(mesh == null && !this.skip.has(figure)) {\r\n                let success = true;\r\n                try {\r\n                    mesh = figure.render(this.plot.getScope());\r\n                } catch (e) {\r\n                    success = false;\r\n                    console.error(e);\r\n                    console.warn('Figure not rendered!');\r\n                    this.skip.add(figure);\r\n                } \r\n                \r\n                if(success && mesh) {\r\n                    this.objMap.set(figure, mesh);\r\n                    this.scene.add(mesh);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n* Arguments to use in the creation of Axes. Does not represent an ADT; is more\r\n* of a JS Object with more security.\r\n*/\r\nexport abstract class AxesArgs {\r\n    public plot: Plot;\r\n    public container: HTMLElement;\r\n    \r\n    public width: number;\r\n    public height: number;\r\n    \r\n    public antialias: boolean;\r\n    \r\n    public constructor(args: any) {\r\n        this.plot = args.plot;\r\n        this.container = args.container;\r\n    }\r\n    \r\n    /**\r\n    * Checks if arguments are valid. Returns true if valid. Throws error if not.\r\n    */\r\n    public validate(): boolean {\r\n        if(!this.plot) {\r\n            throw new Error(\"Invalid arguments: Parent plot not defined!\");\r\n        }\r\n        if(!(this.plot instanceof Plot)) {\r\n            throw new Error(\"Invalid arguments: Parent plot is not an instance of Plot!\");\r\n        }\r\n        \r\n        if(!this.container) {\r\n            throw new Error(\"Invalid arguments: container (HTMLElement) not defined!\");\r\n        }\r\n        if(!(this.container instanceof HTMLElement)) {\r\n            throw new Error(\"Invalid arguments: container is not an instance of HTMLElement!\");\r\n        }\r\n        \r\n        if(this.width === undefined && this.container.clientWidth == 0) {\r\n            throw new Error(\"Invalid arguments: container has client width 0!\");\r\n        }\r\n        if(this.height === undefined && this.container.clientHeight == 0) {\r\n            throw new Error(\"Invalid arguments: container has client height 0!\");\r\n        }\r\n        if(this.width !== undefined && this.width <= 0) {\r\n            throw new Error(\"Invalid arguments: width <= 0!\");\r\n        }\r\n        if(this.height !== undefined && this.height <= 0) {\r\n            throw new Error(\"Invalid arguments: height <= 0!\");\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n    * Fills in default values for undefined properties\r\n    */\r\n    public default(): void {\r\n        if(this.width === undefined) {\r\n            this.width = this.container.clientWidth;\r\n        }\r\n        if(this.height === undefined) {\r\n            this.height = this.container.clientHeight;\r\n        }\r\n        \r\n        if(this.antialias === undefined) {\r\n            this.antialias = true;\r\n        }\r\n    }\r\n}","import { Axes, AxesArgs } from \"./internal\";\r\nimport * as THREE from \"three\";\r\nimport { Vector2, Vector3 } from \"three\";\r\nimport { Hotspot2D } from \"../figures/Hotspot2D\";\r\nimport { Figure } from \"./Figure\";\r\nimport { Label2D } from \"../figures/Label2D\";\r\nimport { Arrow2D } from \"../figures/Arrow2D\";\r\nimport { Point2D } from \"../figures/Point2D\";\r\nimport { Parametric2D } from \"../figures/Parametric2D\";\r\nimport { AngleArc2D } from \"../figures/AngleArc2D\";\r\nimport { bracketAwareSplit } from \"../utils/Utils\";\r\nimport { Polygon2D } from \"../figures/Polygon2D\";\r\n\r\n/**\r\n * An axes where 2D elementds can be plotted.\r\n * \r\n * Controls:\r\n * -    Left click and drag to pan\r\n */\r\nexport class Axes2D extends Axes {\r\n    private camera : THREE.Camera;\r\n    private left: number;\r\n    private right: number;\r\n    private top: number;\r\n    private bottom: number;\r\n\r\n    private hotspots: Hotspot2D[];\r\n    private activeHotspot: Hotspot2D;\r\n\r\n    public constructor(args: Axes2DArgs) {\r\n        super(args);\r\n        this.camera = new THREE.OrthographicCamera(args.left, args.right, args.top, args.bottom, 0, 20);\r\n        this.camera.position.z = 10;\r\n        this.camera.lookAt(this.getScene().position);\r\n\r\n        this.left = args.left;\r\n        this.right = args.right;\r\n        this.top = args.top;\r\n        this.bottom = args.bottom;\r\n\r\n        this.hotspots = [];\r\n        this.activeHotspot = null;\r\n\r\n        ////////////////\r\n        //// Events ////\r\n        ////////////////\r\n\r\n        let clientPosStart : [number, number] = null;\r\n        let cameraPosStart : Vector3 = null\r\n        let onPanStart = (clientX: number, clientY: number) => {\r\n            clientPosStart = [clientX, clientY];\r\n            cameraPosStart = this.camera.position.clone();\r\n        }\r\n\r\n        let onPan = (clientX: number, clientY: number) => {\r\n            let clientBounds = this.getContainer().getBoundingClientRect();\r\n            let clientDiff = [clientX - clientPosStart[0], clientY - clientPosStart[1]];\r\n            \r\n            let cameraDim = [this.right - this.left, this.top - this.bottom];\r\n            let cameraDiff = [clientDiff[0] / clientBounds.width * cameraDim[0], clientDiff[1] / clientBounds.height * cameraDim[1]];\r\n\r\n            this.camera.position.x = cameraPosStart.x - cameraDiff[0];\r\n            this.camera.position.y = cameraPosStart.y + cameraDiff[1];\r\n\r\n            this.camera.updateMatrix();\r\n\r\n            this.getPlot().requestFrame();\r\n        }\r\n\r\n        let onHotspotDrag = (clientX: number, clientY: number) => {\r\n            let containerBounds = this.getContainer().getBoundingClientRect();\r\n            let screenCoords = new THREE.Vector2(clientX - containerBounds.left, clientY - containerBounds.top);\r\n            let worldCoords = unproject(screenCoords);\r\n            this.activeHotspot.setPosition(worldCoords);\r\n        }\r\n\r\n        let onPanEnd = (clientX: number, clientY: number) => {\r\n            clientPosStart = null;\r\n            cameraPosStart = null;\r\n        }\r\n\r\n        var unproject = (screenCoords: Vector2) => {\r\n            let ratioX = screenCoords.x / this.getContainer().clientWidth;\r\n            let ratioY = screenCoords.y / this.getContainer().clientHeight;\r\n            let worldX = this.left + ratioX * (this.right - this.left) + this.camera.position.x;\r\n            let worldY = this.top - ratioY * (this.top - this.bottom) + this.camera.position.y;\r\n            return new Vector2(worldX, worldY);\r\n        }\r\n\r\n        var findActiveHotspot = (clientX: number, clientY: number) => {\r\n            let leastDistance = 1000; // Arbitrarily large number\r\n\r\n            let containerBounds = this.getContainer().getBoundingClientRect();\r\n            let screenCoords = new THREE.Vector2(clientX - containerBounds.left, clientY - containerBounds.top);\r\n\r\n            this.activeHotspot = null;\r\n            for(let hotspot of this.hotspots) {\r\n                let dist2 = this.project(hotspot.getPosition()).distanceToSquared(screenCoords);\r\n                if (dist2 <= 20 * 20 && dist2 < leastDistance * leastDistance) {\r\n                    this.activeHotspot = hotspot;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.getContainer().addEventListener('mousedown', (e) => {\r\n            if(e.buttons & 1) {\r\n                findActiveHotspot(e.clientX, e.clientY); \r\n                if(this.activeHotspot == null) {\r\n                    onPanStart(e.clientX, e.clientY);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.getContainer().addEventListener('mousemove', (e) => {\r\n            if(e.buttons & 1) {\r\n                if(this.activeHotspot == null) {\r\n                    onPan(e.clientX, e.clientY);\r\n                } else {\r\n                    onHotspotDrag(e.clientX, e.clientY);\r\n                }\r\n            }\r\n        })\r\n\r\n        this.getContainer().addEventListener('mouseup', (e) => {\r\n            if(e.buttons & 1) {\r\n                if(this.activeHotspot == null) {\r\n                    onPanEnd(e.clientX, e.clientY);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    public addFigure(figure: Figure): boolean {\r\n        if(figure instanceof Hotspot2D) {\r\n            this.hotspots.push(figure);\r\n        }\r\n        return super.addFigure(figure);\r\n    }\r\n\r\n    public removeFigure(figure: Figure): boolean {\r\n        if(figure instanceof Hotspot2D) {\r\n            let i = this.hotspots.indexOf(figure);\r\n            if(i >= 0) {\r\n                this.hotspots.splice(i, 1);\r\n            }\r\n        }\r\n        return super.removeFigure(figure);\r\n    }\r\n\r\n    protected getCamera() : THREE.Camera {\r\n        return this.camera;\r\n    }\r\n\r\n    public project(worldCoords: Vector2): Vector2 {\r\n        let ratioX = (worldCoords.x - this.camera.position.x - this.left) / (this.right - this.left);\r\n        let ratioY = (worldCoords.y - this.camera.position.y - this.bottom) / (this.top - this.bottom);\r\n        let screenX = ratioX * this.getContainer().clientWidth;\r\n        let screenY = (1 - ratioY) * this.getContainer().clientHeight;\r\n        return new Vector2(screenX, screenY)\r\n    }\r\n\r\n    /**\r\n     * Supports legacy way of creating figures\r\n     */\r\n    public plotExpression(expr: string, type: string, opts: any) {\r\n\r\n        let args = Object.assign({}, opts);\r\n\r\n        switch(type) {\r\n            case 'angle':\r\n                var parts = expr.split(/{|,|}/g);\r\n                args.a = parts[1]\r\n                args.b = parts[2]\r\n                let angleArc = new AngleArc2D(args);\r\n                this.addFigure(angleArc);\r\n                break;\r\n            case 'arrow':\r\n                args.end = expr;\r\n                let arrow = new Arrow2D(args);\r\n                this.addFigure(arrow);\r\n                break;\r\n            case 'label':\r\n                args.axes = this;\r\n                args.label = expr;\r\n                let label = new Label2D(args);\r\n                this.addFigure(label);\r\n                break;\r\n            case 'point':\r\n                args.position = expr;\r\n                let point = new Point2D(args);\r\n                this.addFigure(point);\r\n                break;\r\n            case 'hotspot':\r\n                args.plot = this.getPlot();\r\n                args.variable = expr;\r\n                let hotspot = new Hotspot2D(args);\r\n                this.addFigure(hotspot);\r\n                break;\r\n            case 'parametric':\r\n                var parts = expr.split(/{|}/g);\r\n                args.expression = parts[0];\r\n\r\n                let parts2 = parts[1].split(',');\r\n                args.parameter = parts2[0];\r\n                args.start = parts2[1];\r\n                args.end = parts2[2];\r\n                args.steps = parts2[3];\r\n                let param = new Parametric2D(args);\r\n                this.addFigure(param);\r\n                break;\r\n            case 'polygon':\r\n                let verts = bracketAwareSplit(expr.slice(1, expr.length - 1), ',');\r\n                args.vertices = verts;\r\n                let poly = new Polygon2D(args);\r\n                this.addFigure(poly);\r\n                break;\r\n            default:\r\n                throw new Error(\"Unknown figure type!\");\r\n        }\r\n    }\r\n}\r\n\r\nexport class Axes2DArgs extends AxesArgs {\r\n    public left : number;\r\n    public right : number;\r\n    public top : number;\r\n    public bottom : number;\r\n    \r\n    public constructor(args: any) {\r\n        super(args);\r\n        this.left = args.left;\r\n        this.right = args.right;\r\n        this.top = args.top;\r\n        this.bottom = args.bottom;\r\n    }\r\n    \r\n    public validate() : boolean {\r\n        super.validate();\r\n        if(this.right !== undefined && this.left !== undefined && this.right - this.left <= 0) {\r\n            throw new Error(\"Invalid arguments: left >= right.\");\r\n        }\r\n        \r\n        if(this.top !== undefined && this.bottom !== undefined && this.top - this.bottom <= 0) {\r\n            throw new Error(\"Invalid arguments: top <= bottom.\");\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    public default() : void {\r\n        super.default();\r\n        if(this.left === undefined) {\r\n            this.left = -10;\r\n        }\r\n        if(this.right=== undefined) {\r\n            this.right = 10;\r\n        }\r\n        if(this.top === undefined) {\r\n            this.top = 10;\r\n        }\r\n        if(this.bottom === undefined) {\r\n            this.bottom = -10;\r\n        }\r\n    }\r\n}","import { Axes, AxesArgs } from \"./internal\";\r\nimport * as THREE from \"three\";\r\n\r\nexport class Axes3D extends Axes {\r\n    private camera : THREE.Camera;\r\n    public constructor(args: Axes3DArgs) {\r\n        super(args);\r\n        this.camera = new THREE.PerspectiveCamera();\r\n    }\r\n\r\n    public getCamera(): THREE.Camera {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n\r\nexport class Axes3DArgs extends AxesArgs {\r\n}","import { Plot } from './internal';\r\nimport * as math from 'mathjs';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nexport class Panel {\r\n    private plot: Plot;\r\n    private container: HTMLElement;\r\n\r\n    private panelComponents: JSX.Element[];\r\n\r\n    public constructor(args: any) {\r\n        let args2 = new PanelArgs(args);\r\n        args2.validate();\r\n        args2.defaults();\r\n\r\n        this.plot = args2.plot;\r\n        this.container = args2.container;\r\n\r\n        this.panelComponents = [];\r\n    }\r\n\r\n    public createSlider(args: any) {\r\n        args.plot = this.plot;\r\n        let slider = <PanelComponent.Slider {...args} key={this.panelComponents.length}/>;\r\n\r\n        this.append(slider);\r\n    }\r\n\r\n    public addReadout(expression: string, opts: string) {\r\n        let args = Object.assign({}, opts) as any;\r\n        args.plot = this.plot;\r\n        args.expression = expression;\r\n        let readout = <PanelComponent.Readout {...args} key={this.panelComponents.length}/>;\r\n\r\n        this.append(readout);\r\n    }\r\n\r\n    public addCheckBox(variable: string, opts: any) {\r\n        let args = Object.assign({}, opts);\r\n        args.plot = this.plot;\r\n        args.variable = variable;\r\n        let checkbox = <PanelComponent.CheckBox {...args} key={this.panelComponents.length}/>;\r\n\r\n        this.append(checkbox);\r\n    }\r\n\r\n    private append(element: JSX.Element) {\r\n        this.panelComponents.push(element);\r\n        ReactDOM.render(\r\n            <div>{this.panelComponents.map((elm) => <div>{elm}</div> )}</div>,\r\n            this.container);\r\n    }\r\n}\r\n\r\nexport namespace PanelComponent {\r\n\r\n    export class Slider extends React.Component {\r\n        props: any;\r\n\r\n        private args: PanelComponent.SliderArgs;\r\n\r\n        private sliderElement: HTMLInputElement;\r\n\r\n        public constructor(props: any) {\r\n            super(props);\r\n\r\n            this.args = new PanelComponent.SliderArgs(props);\r\n            this.args.validate();\r\n            this.args.defaults();\r\n        }\r\n\r\n        public render() {\r\n            let onInput = () => {\r\n                this.args.plot.setConstant(this.args.variable, parseFloat(this.sliderElement.value));\r\n                this.args.plot.refresh();\r\n                this.args.plot.requestFrame();\r\n            }\r\n\r\n            let step = (this.args.end - this.args.start) / (this.args.steps - 1);\r\n\r\n            let value = this.args.plot.getScope()[this.args.variable];\r\n            // Set initial value if not already set\r\n            if (math.typeof(value) != 'number') {\r\n                value = this.args.start;\r\n                this.args.plot.setConstant(this.args.variable, value);\r\n            }\r\n\r\n            return [this.args.variable + ':', <input type=\"range\" \r\n                min={this.args.start}\r\n                max={this.args.end}\r\n                step={step}\r\n                defaultValue={value}\r\n                onInput={onInput}\r\n                ref={(elm) => this.sliderElement = elm}\r\n                key=\"1\"></input>]\r\n        }\r\n    }\r\n\r\n    export class SliderArgs {\r\n        public plot: Plot;\r\n\r\n        public variable: string;\r\n        public start: number;\r\n        public end: number;\r\n        public steps: number;\r\n\r\n        public continuousUpdate: boolean;\r\n\r\n        public constructor(args: any) {\r\n            this.plot = args.plot;\r\n\r\n            this.variable = args.variable;\r\n            this.start = args.start;\r\n            this.end = args.end;\r\n            this.steps = args.steps;\r\n\r\n            this.continuousUpdate = args.continuousUpdate;\r\n        }\r\n\r\n        public validate() : boolean {\r\n            if(this.plot === undefined) {\r\n                throw new Error('Invalid arguments: Plot not defined!');\r\n            }\r\n            if(this.variable === undefined) {\r\n                throw new Error('Invalid arguments: Variable not defined!');\r\n            }            \r\n            if(this.start === undefined) {\r\n                throw new Error('Invalid arguments: Start not defined!');\r\n            }            \r\n            if(this.end === undefined) {\r\n                throw new Error('Invalid arguments: End not defined!');\r\n            }    \r\n            return true;        \r\n        }\r\n\r\n        public defaults() : void {\r\n            if(this.steps === undefined) {\r\n                this.steps = 50;\r\n            }\r\n            if(this.continuousUpdate === undefined) {\r\n                this.continuousUpdate = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    export class Readout extends React.Component {\r\n        props: any;\r\n        state: {value: string};\r\n\r\n        private args: PanelComponent.ReadoutArgs;\r\n\r\n        public constructor(props: any) {\r\n            super(props);\r\n\r\n            this.args = new PanelComponent.ReadoutArgs(props);\r\n            this.args.validate();\r\n            this.args.defaults();\r\n\r\n            let getValue = () => {\r\n                let value = 'N/A';\r\n                try {\r\n                    value = '' + this.args.plot.evalExpression(this.args.expression);\r\n                    value = value.replace(/(\\.\\d\\d\\d)\\d*/g, \"$1\");\r\n                } catch (e) {\r\n\r\n                }\r\n                return value;\r\n            }\r\n\r\n            this.state = {\r\n                value: getValue()\r\n            };\r\n\r\n            let updateValue = () => {\r\n                this.setState({\r\n                    value: getValue()   \r\n                });\r\n            };\r\n\r\n            this.args.plot.onRefresh(updateValue);\r\n            this.args.plot.onExecExpression(updateValue);\r\n        }\r\n\r\n        public render() {\r\n            return [this.args.label + \" =\", <input key=\"1\" type=\"text\"\r\n                disabled={true} value={this.state.value}></input>];\r\n        }\r\n    }\r\n\r\n    export class ReadoutArgs {\r\n        public plot: Plot;\r\n        public expression: string;\r\n        public label: string;\r\n\r\n        public constructor(args: any) {\r\n            this.plot = args.plot;\r\n            this.expression = args.expression;\r\n            this.label = args.label;\r\n        }\r\n\r\n        public validate() : boolean {\r\n            if(this.plot === undefined) {\r\n                throw new Error('Invalid arguments: Plot not defined!');\r\n            }     \r\n            if(this.expression === undefined) {\r\n                throw new Error('Invalid arguments: Variable not defined!');\r\n            }     \r\n            return true;        \r\n        }\r\n\r\n        public defaults() : void {\r\n            if(this.label === undefined) {\r\n                this.label = this.expression;\r\n            }\r\n        }\r\n    }\r\n\r\n    export class CheckBox extends React.Component {\r\n        props: any;\r\n\r\n        private args: PanelComponent.CheckBoxArgs;\r\n\r\n        private checkBoxElement: HTMLInputElement;\r\n\r\n        public constructor(props: any) {\r\n            super(props);\r\n\r\n            this.args = new PanelComponent.CheckBoxArgs(props);\r\n            this.args.validate();\r\n            this.args.defaults();\r\n        }\r\n\r\n        public render() {\r\n            let onInput = () => {\r\n                let value = this.checkBoxElement.checked ? 1 : 0;\r\n                this.args.plot.setConstant(this.args.variable, value);\r\n                this.args.plot.refresh();\r\n                this.args.plot.requestFrame();\r\n            }\r\n\r\n            let value = this.args.plot.getScope()[this.args.variable];\r\n            // Set initial value if not already set\r\n            if (math.typeof(value) != 'number') {\r\n                value = 0;\r\n                this.args.plot.setConstant(this.args.variable, value);\r\n            }\r\n\r\n            return [this.args.label + ':', <input type=\"checkbox\" \r\n                onInput={onInput}\r\n                defaultChecked={value}\r\n                ref={(elm) => this.checkBoxElement = elm}\r\n                key=\"1\"></input>]\r\n        }\r\n    }\r\n\r\n    export class CheckBoxArgs {\r\n        public plot: Plot;\r\n        public variable: string;\r\n        public label: string;\r\n\r\n        public constructor(args: any) {\r\n            this.plot = args.plot;\r\n            this.variable = args.variable;\r\n            this.label = args.label;\r\n        }\r\n\r\n        public validate() : boolean {\r\n            if(this.plot === undefined) {\r\n                throw new Error('Invalid arguments: Plot not defined!');\r\n            }\r\n            if(this.variable === undefined) {\r\n                throw new Error('Invalid arguments: Variable not defined!');\r\n            }            \r\n            return true;        \r\n        }\r\n\r\n        public defaults() : void {\r\n            if(this.label === undefined) {\r\n                this.label = this.variable;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class PanelArgs {\r\n    public plot: Plot;\r\n    public container: HTMLElement;\r\n\r\n    public constructor(args: any) {\r\n        this.plot = args.plot;\r\n        this.container = args.container;\r\n    }\r\n\r\n    public validate() : boolean {\r\n        if(this.plot === undefined) {\r\n            throw new Error(\"Invalid arguments: Plot not defined!\")\r\n        }\r\n        if(this.container === undefined) {\r\n            throw new Error(\"Invalid arguments: Container not defined!\")\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public defaults() : void {\r\n\r\n    }\r\n}","import { Axes, Axes2D, Axes2DArgs, Axes3D, Axes3DArgs, Panel, PanelArgs } from './internal';\r\nimport * as math from 'mathjs';\r\nimport { func } from 'prop-types';\r\n\r\n/**\r\n* A controller for a plot. Can contain several axes, which can in turn contain\r\n* several figures. Each plot contains its own context on which expression are\r\n* evaluates/executed\r\n*/\r\nexport class Plot {\r\n    private axes : Set<Axes>;\r\n    private scope : any;\r\n\r\n    private refreshCallbacks: (() => void)[];\r\n    private execExpressionCallbacks: ((expr: string) => void)[];\r\n    \r\n    private renderMutex: boolean;\r\n\r\n    public constructor() {\r\n        this.axes = new Set<Axes>();\r\n        this.scope = {};\r\n\r\n        this.refreshCallbacks = [];\r\n        this.execExpressionCallbacks = [];\r\n        \r\n        this.renderMutex = false;\r\n\r\n        // Some useful functions\r\n        let eps = Math.pow(2, -52);\r\n        let eps2 = Math.pow(2, -26);\r\n        this.scope.nderivative = function(f: any, x: any) {\r\n            if(math.typeof(x) != 'number') {\r\n                throw new Error('Invalid argument for x');\r\n            }\r\n\r\n            let h = math.max(math.abs(eps2 * x), eps2) / 2;\r\n            return math.divide(math.subtract(f(x + h), f(x - h)), 2 * h);\r\n        }\r\n\r\n        this.scope.lerp = function(a: any, b: any, alpha: any) {\r\n            if(math.typeof(alpha) != 'number') {\r\n                throw new Error('Invalid argument for alpha');\r\n            }\r\n\r\n            return math.add(math.multiply(1 - alpha, a), math.multiply(alpha, b)); \r\n        }\r\n\r\n        // Check visibility when scrolling\r\n\r\n        let checkVisible = (el: HTMLElement) => {\r\n            var elemTop = el.getBoundingClientRect().top;\r\n            var elemBottom = el.getBoundingClientRect().bottom;\r\n\r\n            var isVisible = (elemBottom >= 0) && (elemTop <= window.innerHeight);\r\n            return isVisible;\r\n        }\r\n\r\n        window.addEventListener('scroll', () => {\r\n            for(let ax of this.axes) {\r\n                if(checkVisible(ax.getContainer())) {\r\n                    if(ax.isSleeping()) ax.wake();\r\n                    ax.render(); \r\n                } else if (!ax.isSleeping()) {\r\n                    ax.sleep();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n    * Creates a new 2D axes from given arguments\r\n    * @param args \r\n    */\r\n    public createAxes2D(args: any): Axes2D {\r\n        let axesArgs = new Axes2DArgs(args);\r\n        axesArgs.plot = this;\r\n        \r\n        let newAxes = new Axes2D(axesArgs);\r\n        this.addAxes(newAxes);\r\n        return newAxes;\r\n    }\r\n    \r\n    /**\r\n    * Creates a new 2D axes from given arguments\r\n    * @param args \r\n    */\r\n    public createAxes3D(args: any): Axes3D {\r\n        let axesArgs = new Axes3DArgs(args);\r\n        axesArgs.plot = this;\r\n        \r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    \r\n    /**\r\n    * Removes the axes if it is present.\r\n    * @param axes \r\n    * @returns true is axes was removed. false if it did not exist.\r\n    */\r\n    public dropAxes(axes: Axes): boolean {\r\n        return this.axes.delete(axes);\r\n    }\r\n    \r\n    /**\r\n    * Creates a panel\r\n    * @param args \r\n    * @return The new panel\r\n    */\r\n    public createPanel(args: any): Panel {\r\n        let args2 = new PanelArgs(args);\r\n        args2.plot = this;\r\n        let panel = new Panel(args2);\r\n        return panel;\r\n    }\r\n    \r\n    /**\r\n    * Renders all axes that are on screen\r\n    */\r\n    public render() : void {      \r\n        for(let ax of this.axes) {\r\n            if (!ax.isSleeping()) {\r\n                ax.render(); \r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Request a render frame\r\n     */\r\n    public requestFrame(): void {\r\n        if(!this.renderMutex) {\r\n            this.renderMutex = true;\r\n            requestAnimationFrame(() => {\r\n                this.render();\r\n                this.renderMutex = false;\r\n            }); \r\n        } \r\n    }\r\n\r\n    /**\r\n    * Refresh all axes\r\n    */\r\n    public refresh() : void {\r\n        for(let ax of this.axes) {\r\n            ax.refreshAll();\r\n        }\r\n        for(let callback of this.refreshCallbacks) {\r\n            callback();\r\n        }\r\n    }\r\n    \r\n    /**\r\n    * Disposes all GL contexts hosted by this plot\r\n    */\r\n    public sleep(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    \r\n    /**\r\n    * Re-instances the GL contexts\r\n    */\r\n    public wake(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    \r\n    /**\r\n    * Executes an expression\r\n    */\r\n    public execExpression(expr: string) : any {\r\n        let result = math.eval(expr, this.scope);\r\n        for(let callback of this.execExpressionCallbacks) {\r\n            callback(expr);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Evaluates an expression. Identical to exec expressions, but does not trigger onExpressionExec callbacks.\r\n     */\r\n    public evalExpression(expr: string): any {\r\n        return math.eval(expr, this.scope);\r\n    }\r\n    \r\n    /**\r\n    * Sets the value of specified variable in the scope.\r\n    * @param variable \r\n    * @param value \r\n    */\r\n    public setConstant(variable: string, value: any) {\r\n        this.scope[variable] = value;\r\n    }\r\n    \r\n    /**\r\n     * Register a callback to perform when the plot is refreshed\r\n     * @param callback \r\n     */\r\n    public onRefresh(callback: ()=>void) {\r\n        this.refreshCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * Register a callback to perform when an expression is executed\r\n     * @param callback \r\n     */\r\n    public onExecExpression(callback: (expr: string) => void) {\r\n        this.execExpressionCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n    * Returns the scope used in evaluating expresions. Due to limitations on\r\n    * how Javascript copies objects, it just returns a shallow copy.\r\n    */\r\n    public getScope() : any {\r\n        return Object.create(this.scope);\r\n    }\r\n    \r\n    /**\r\n    * Adds specified axes to graph. \r\n    * @param axes\r\n    */\r\n    private addAxes(axes: Axes): void {\r\n        this.axes.add(axes);\r\n    }\r\n}","// Makes sure modules load in the correct order \r\nexport * from './Axes';\r\nexport * from './Axes2D';\r\nexport * from './Axes3D';\r\nexport * from './Panel';\r\nexport * from './Plot';","import { Figure } from '../core/Figure';\r\nimport { Vector3, Mesh, ArrowHelper, Object3D, CircleBufferGeometry, MeshBasicMaterial, Vector2, EllipseCurve, Path, LineBasicMaterial, Line, Geometry } from 'three';\r\nimport * as math from 'mathjs';\r\n\r\nexport class AngleArc2D implements Figure {\r\n    private aFun: math.EvalFunction;\r\n    private bFun: math.EvalFunction;\r\n    \r\n    private hex: number;\r\n    private radius: number;\r\n    \r\n    public constructor(args: any) {\r\n        let args2 = new AngleArc2DArgs(args); \r\n        args2.validate();\r\n        args2.defaults();\r\n        \r\n        this.aFun= math.parse(args2.a).compile();\r\n        this.bFun = math.parse(args2.b).compile();\r\n        \r\n        this.hex = args2.hex;\r\n        this.radius = args2.radius;\r\n    }\r\n    \r\n    public render(scope : any) : Object3D {\r\n        let a = new Vector2(...this.aFun.eval(scope)._data); \r\n        let b = new Vector2(...this.bFun.eval(scope)._data); \r\n        \r\n        let thetaA = Math.atan2(a.y, a.x);\r\n        let thetaB = Math.atan2(b.y, b.x);\r\n        let clockwise = thetaA-thetaB < Math.PI && thetaA-thetaB >= 0;\r\n        \r\n        let points : Vector2[];\r\n        if(Math.abs(a.dot(b)) < 0.01) {\r\n            let v1 = a.clone().normalize().multiplyScalar(this.radius);\r\n            let v3 = b.clone().normalize().multiplyScalar(this.radius);\r\n            let v2 = v1.clone().add(v3);\r\n            points = [v1, v2, v3]\r\n        } else {\r\n            let curve = new EllipseCurve(\r\n                0, 0,                     // ax, aY\r\n                this.radius, this.radius, // xRadius, yRadius\r\n                thetaA, thetaB,           // aStartAngle, aEndAngle\r\n                clockwise,                // aClockwise\r\n                0                         // aRotation\r\n            );\r\n            \r\n            points = curve.getSpacedPoints( 20 );\r\n        }\r\n        \r\n        let material = new LineBasicMaterial( { color : this.hex } );\r\n        \r\n        let line = new Line( new Geometry().setFromPoints(points) , material );\r\n        \r\n        return line;\r\n    }\r\n}\r\n\r\nexport class AngleArc2DArgs {\r\n    public origin: string;\r\n    public a: string;\r\n    public b: string;\r\n    \r\n    public hex : number;\r\n    public radius: number;\r\n    \r\n    public constructor(args : any) {\r\n        this.origin = args.origin;\r\n        this.a = args.a;\r\n        this.b = args.b;\r\n        \r\n        this.hex = args.hex;\r\n        this.radius = args.radius;\r\n    }\r\n    \r\n    public validate() : boolean {\r\n        if(!this.a) {\r\n            throw new Error(\"Invalid arguments: a not defined!\");\r\n        }\r\n        if(!this.b) {\r\n            throw new Error(\"Invalid arguments: b not defined!\");\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    public defaults() : void {\r\n        if(this.origin === undefined) {\r\n            this.origin = '[0,0]';\r\n        }\r\n        if (this.hex === undefined) {\r\n            this.hex = 0xffffff;\r\n        }\r\n        if(this.radius === undefined) {\r\n            this.radius = 0.2;\r\n        }\r\n    }\r\n}","import { Figure } from '../core/Figure';\r\nimport { Vector3, Mesh, ArrowHelper, Object3D } from 'three';\r\nimport * as math from 'mathjs';\r\nimport {LineArrowHelper} from '../utils/LineArrowHelper';\r\n\r\nexport class Arrow2D implements Figure {\r\n    private startFun : math.EvalFunction;\r\n    private endFun: math.EvalFunction;\r\n    private hex: number;\r\n    private headLength: number;\r\n    private headWidth: number;\r\n    private width: number;\r\n\r\n    private showFun: math.EvalFunction;\r\n    \r\n    public constructor(args: any) {\r\n        let args2 = new Arrow2DArgs(args); \r\n        args2.validate();\r\n        args2.defaults();\r\n        \r\n        this.startFun = math.parse(args2.start).compile();\r\n        this.endFun = math.parse(args2.end).compile();\r\n\r\n        this.hex = args2.hex;\r\n        this.headLength = args2.headLength;\r\n        this.headWidth = args2.headWidth;\r\n        this.width = args2.width;\r\n\r\n        this.showFun = math.parse(args2.show).compile();\r\n    }\r\n    \r\n    public render(scope : any) : Object3D {\r\n        let show = this.showFun.eval(scope);\r\n        if(show == 0) return null;\r\n\r\n        let end = this.endFun.eval(scope);\r\n        if(math.typeof(end) != 'Matrix') {\r\n            throw new Error('End expression does not evaluate to a vector (Matrix)!');\r\n        }\r\n\r\n        let endVec = new Vector3(end._data[0], end._data[1], 0);\r\n        \r\n        let start = this.startFun.eval(scope);\r\n        if(math.typeof(start) != 'Matrix') {\r\n            throw new Error('Start expression does not evaluate to vector (Matrix)!');\r\n        }\r\n        let startVec = new Vector3(start._data[0], start._data[1], 0);\r\n\r\n        let dir = endVec.clone().sub(startVec).normalize();\r\n        let length = endVec.distanceTo(startVec);\r\n\r\n        let hex = this.hex;\r\n        let headLength = this.headLength;\r\n        let headWidth = this.headWidth;     \r\n        \r\n        if(this.width <= 0) {\r\n            return new ArrowHelper(dir, startVec, length, hex, headLength, headWidth);\r\n        } else {\r\n            return new LineArrowHelper(dir, startVec, length, hex, headLength, headWidth, this.width);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Arrow2DArgs {\r\n    public start : string;\r\n    public end : string;\r\n    public hex : number;\r\n    public headLength : number;\r\n    public headWidth : number;\r\n    public width: number;\r\n\r\n    /**\r\n     * Arrow is visible is show evals to 1\r\n     */\r\n    public show: string;\r\n    \r\n    public constructor(args : any) {\r\n        this.start = args.start;\r\n        this.end = args.end;\r\n        this.hex = args.hex;\r\n        this.headLength = args.headLength;\r\n        this.headWidth = args.headWidth;\r\n        this.width = args.width;\r\n\r\n        this.show = args.show;\r\n    }\r\n    \r\n    public validate() : boolean {\r\n        if(!this.end) {\r\n            throw new Error(\"Invalid arguments: end not defined!\");\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    public defaults() : void {\r\n        let args : any = {};\r\n        if (this.start === undefined) {\r\n            this.start = '[0,0]';\r\n        }\r\n        if (this.hex === undefined) {\r\n            this.hex = 0xffffff;\r\n        }\r\n        if(this.headLength === undefined) {\r\n            this.headLength = 0.2;\r\n        }\r\n        if(this.headWidth === undefined) {\r\n            this.headWidth = 0.15;\r\n        }\r\n        if(this.show === undefined) {\r\n            this.show = '1';\r\n        }\r\n        if(this.width === undefined) {\r\n            this.width = 0.01;\r\n        }\r\n    }\r\n}","import { Figure } from '../core/Figure';\r\nimport { Vector2, Object3D } from 'three';\r\nimport * as math from 'mathjs';\r\nimport { Plot } from '../core/Plot';\r\n\r\nexport class Hotspot2D implements Figure {\r\n    private plot: Plot;\r\n    private variable: string;\r\n    private position: Vector2;\r\n    \r\n    public constructor(args: any) {\r\n        let args2 = new Hotspot2DArgs(args); \r\n        args2.validate();\r\n        args2.defaults();\r\n        \r\n        this.plot = args2.plot;\r\n        this.variable = args2.variable;\r\n        this.position = null;\r\n    }\r\n\r\n    public getPosition(): Vector2 {\r\n        if(this.position == null) {\r\n            let vector = this.plot.getScope()[this.variable];\r\n            this.position = new Vector2(...vector._data)\r\n        }\r\n        return this.position;\r\n    }\r\n\r\n    public setPosition(position: Vector2): void {\r\n        this.position = position;\r\n        this.plot.execExpression(this.variable + '=[' + position.toArray() + ']');\r\n        this.plot.refresh();\r\n        this.plot.requestFrame();\r\n    }\r\n    \r\n    public render(scope : any) : Object3D {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class Hotspot2DArgs {\r\n    public plot: Plot;\r\n    public variable: string;\r\n    \r\n    public constructor(args : any) {\r\n        this.plot = args.plot;\r\n        this.variable = args.variable;\r\n    }\r\n    \r\n    public validate() : boolean {\r\n        if(!this.plot) {\r\n            throw new Error(\"Invalid arguments: Plot not defined!\");\r\n        }\r\n        if(!this.variable) {\r\n            throw new Error(\"Invalid arguments: Variable not defined!\");\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    public defaults() : void {\r\n      \r\n    }\r\n}","import { Figure } from '../core/Figure';\r\nimport { Vector2, Object3D } from 'three';\r\nimport * as math from 'mathjs';\r\nimport { Plot } from '../core/Plot';\r\nimport { Axes2D } from '../core/Axes2D';\r\n\r\nexport class Label2D implements Figure {\r\n    private axes: Axes2D;\r\n    private positionFun: math.EvalFunction;\r\n    private label: string;\r\n\r\n    private labelElement: HTMLDivElement;\r\n    \r\n    public constructor(args: any) {\r\n        let args2 = new Label2DArgs(args); \r\n        args2.validate();\r\n        args2.defaults();\r\n        \r\n        this.axes = args2.axes;\r\n        this.positionFun = math.parse(args2.position).compile();\r\n        this.label = args.label;\r\n\r\n        ////////////////////////////\r\n        //// Creating Label Div ////\r\n        ////////////////////////////\r\n\r\n        let label = document.createElement('div');\r\n        label.style.position = 'absolute';\r\n        label.style.width = '100';\r\n        label.style.height = '100';\r\n        label.style.color = 'white';\r\n\r\n        label.style.cursor = 'default';\r\n        // @ts-ignore: Legacy code\r\n        label.style['pointer-events'] = 'none';\r\n\r\n        // @ts-ignore: Legacy code\r\n        label.style['-webkit-user-select'] = 'none'; /* Chrome, Opera, Safari */\r\n        // @ts-ignore: Legacy code\r\n        label.style['-moz-user-select'] = 'none'; /* Firefox 2+ */\r\n        // @ts-ignore: Legacy code\r\n        label.style['-ms-user-select'] = 'none'; /* IE 10+ */\r\n        // @ts-ignore: Legacy code\r\n        label.style['user-select'] = 'none'; /* Standard syntax */\r\n\r\n        label.innerHTML = this.label;\r\n\r\n        this.labelElement = label;\r\n\r\n        document.body.appendChild(label);\r\n    }\r\n    \r\n    public render(scope : any) : Object3D {\r\n        let position = new Vector2(...this.positionFun.eval(scope)._data);\r\n        let coords = this.axes.project(position);\r\n        let rect = this.axes.getContainer().getBoundingClientRect();\r\n        this.labelElement.style.top = window.scrollY + coords.y + rect.top + 'px';\r\n        this.labelElement.style.left = window.scrollX + coords.x + rect.left + 'px';\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class Label2DArgs {\r\n    public axes: Axes2D;\r\n    public position: string;\r\n    public label: string;\r\n    \r\n    public constructor(args : any) {\r\n        this.axes = args.axes;\r\n        this.position = args.position;\r\n        this.label = args.label;\r\n    }\r\n    \r\n    public validate() : boolean {\r\n        if(!this.axes) {\r\n            throw new Error(\"Invalid arguments: Axes not defined!\");\r\n        }\r\n        if(!(this.axes instanceof Axes2D)) {\r\n            throw new Error(\"Invalid arguments: axes is not an Axes2D\");\r\n        }\r\n        if(!this.position) { \r\n            throw new Error(\"Invalid arguments: Variable not defined!\");\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    public defaults() : void {\r\n        if(this.label === undefined){\r\n            this.label = this.position;\r\n        }\r\n    }\r\n}","import { Vector3, Object3D, Geometry, Face3, MeshBasicMaterial, Mesh } from 'three';\r\nimport * as math from 'mathjs';\r\nimport * as THREE from 'three';\r\nimport { Figure } from '../core/Figure';\r\n\r\nexport class Parallelogram2D implements Figure {\r\n    private uFun : math.EvalFunction;\r\n    private vFun: math.EvalFunction;\r\n    private opacity: number;\r\n    \r\n    /**\r\n     * Creates a parallelogram spanned by args.u and args.v\r\n     * @param args \r\n     */\r\n    public constructor(args: any) {\r\n        let args2 = new Parallelogram2DArgs(args); \r\n        args2.validate();\r\n        args2.defaults();\r\n        \r\n        this.uFun = math.parse(args2.u).compile();\r\n        this.vFun = math.parse(args2.v).compile();\r\n        this.opacity = args2.opacity;\r\n    }\r\n    \r\n    public render(scope : any) : Object3D {\r\n        var o = new Vector3(0, 0, 0);\r\n        var u = new Vector3(...this.uFun.eval(scope)._data, -0.1);\r\n        var v = new Vector3(...this.vFun.eval(scope)._data, -0.1);\r\n    \r\n        var geom = new Geometry();\r\n        geom.vertices.push(o);\r\n        geom.vertices.push(o.clone().add(u));\r\n        geom.vertices.push(o.clone().add(v));\r\n        geom.vertices.push(o.clone().add(u).add(v));\r\n        \r\n        var f1 = new Face3(3, 1, 0);\r\n        var f2 = new Face3(0, 2, 3);\r\n\r\n        geom.faces.push(f1);                \r\n        geom.faces.push(f2);\r\n\r\n        var mat = new MeshBasicMaterial({color: 0xFFFFFF, side: THREE.DoubleSide, opacity: this.opacity, transparent: true});\r\n\r\n        return new Mesh( geom, mat );\r\n    }\r\n}\r\n\r\nexport class Parallelogram2DArgs {\r\n    public u: string;\r\n    public v: string;\r\n    public opacity: number;\r\n    \r\n    public constructor(args : any) {\r\n        this.u = args.u;\r\n        this.v = args.v;\r\n        this.opacity = args.opacity;\r\n    }\r\n    \r\n    public validate() : boolean {\r\n        if(!this.u || !this.v) {\r\n            throw new Error(\"Invalid arguments: u or v not defined!\");\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    public defaults() : void {\r\n        if (this.opacity === undefined) {\r\n            this.opacity = 1;\r\n        }\r\n    }\r\n}","import { Figure } from '../core/Figure';\r\nimport { MeshLine, MeshLineMaterial } from 'three.meshline';\r\nimport * as math from 'mathjs';\r\nimport { Object3D, BufferGeometry, BufferAttribute, Mesh } from 'three';\r\n\r\nexport class Parametric2D implements Figure {\r\n\r\n    private expressionFun: math.EvalFunction;\r\n    private parameter: string;\r\n\r\n    private startFun: math.EvalFunction;\r\n    private endFun: math.EvalFunction;\r\n    private stepsFun: math.EvalFunction;\r\n\r\n    private colorFun: math.EvalFunction;\r\n\r\n    private width: number;\r\n\r\n    public constructor(args: any) {\r\n        let args2 = new Parametric2DArgs(args);\r\n        args2.validate();\r\n        args2.defaults();\r\n\r\n        this.expressionFun = math.parse(args2.expression).compile();\r\n        this.parameter = args.parameter;\r\n\r\n        this.startFun = math.parse(args2.start).compile();\r\n        this.endFun = math.parse(args2.end).compile();\r\n        this.stepsFun = math.parse(args2.steps).compile();\r\n\r\n        if(args.color == null) {\r\n            this.colorFun = null;\r\n        } else {\r\n            this.colorFun = math.parse(args2.color).compile();\r\n        }\r\n\r\n        this.width = args2.width;\r\n    }\r\n\r\n    public render(scope?: any) : Object3D {\r\n        let self_ = this;\r\n        let newScope = Object.create(scope);\r\n\r\n        // Determine start end step\r\n        let start = this.startFun.eval(scope);\r\n        if(math.typeof(start) != 'number') {\r\n            throw new Error(\"Start does not evaluate to a number!\");\r\n        }\r\n\r\n        let end = this.endFun.eval(scope);\r\n        if(math.typeof(end) != 'number') {\r\n            throw new Error(\"End does not evaluate to a number!\");\r\n        }\r\n\r\n        let steps = this.stepsFun.eval(scope);\r\n        if(math.typeof(steps) != 'number') {\r\n            throw new Error(\"Step does not evaluate to a number!\");\r\n        }\r\n\r\n        // Create parametric function\r\n        let parametricFun = function(t: number) {\r\n            newScope[self_.parameter] = t;\r\n            return self_.expressionFun.eval(newScope);\r\n        }\r\n\r\n        // Test expression returns correct type\r\n        if(math.typeof(parametricFun(start)) != 'Matrix') {\r\n            throw new Error(\"Expression does not evaluate to a vector (Matrix)!\");\r\n        }\r\n\r\n        // Create color function\r\n        let colorFun : (t: number) => Array<number>;\r\n        if(this.colorFun != null) {\r\n            // Test to make sure color returns correct type\r\n            newScope[this.parameter] = start;\r\n            if(math.typeof(this.colorFun.eval(newScope)) != 'Matrix') {\r\n                throw new Error(\"Color does not evaluate to a vector (Matrix)!\");\r\n            }\r\n\r\n            colorFun = function(t: number) : Array<number> {\r\n                newScope[self_.parameter] = t;\r\n                let result = self_.colorFun.eval(newScope);\r\n                return [...result._data];\r\n            }\r\n        } else {\r\n            colorFun = function(t: number) : Array<number> {\r\n                return [1,1,1];\r\n            }\r\n        }\r\n\r\n       let step = (end - start) / (steps - 1);\r\n       let verts = new Float32Array(steps * 3);\r\n       let colors = new Float32Array(steps * 4);\r\n       for(let i = 0; i < steps; i++) {\r\n           let t = start + i * step;\r\n           let point = parametricFun(t);\r\n           let color = colorFun(t);\r\n\r\n           verts[i*3] = point._data[0];\r\n           verts[i*3 + 1] = point._data[1];\r\n           verts[i*3 + 2] = 0;\r\n\r\n           colors[i*4] = color[0];\r\n           colors[i*4 + 1] = color[1];\r\n           colors[i*4 + 2] = color[2];\r\n           colors[i*4 + 3] = 1;\r\n       } \r\n\r\n       let geom = new BufferGeometry();\r\n       geom.addAttribute('position', new BufferAttribute(verts, 3));\r\n       geom.addAttribute('color', new BufferAttribute(colors, 4));\r\n        \r\n       let line = new MeshLine();\r\n       line.setGeometry(geom);\r\n\r\n       let material = new MeshLineMaterial({useGlobalColor: 0, lineWidth: this.width});\r\n       return new Mesh(line.geometry, material)\r\n    }\r\n\r\n}\r\n\r\nexport class Parametric2DArgs {\r\n    /**\r\n     * The parametric expression to plot. Should be a vector.\r\n     */\r\n    public expression: string;\r\n    /**\r\n     * The parameter to vary\r\n     */\r\n    public parameter: string;\r\n\r\n    /**\r\n     * The starting value of the parameter\r\n     */\r\n    public start: string;\r\n    /**\r\n     * The end value of the parameter\r\n     */\r\n    public end: string;\r\n    /**\r\n     * The number of steps at which to calculate points\r\n     */\r\n    public steps: string;\r\n\r\n    /**\r\n     * The color of the line. Evaluated as a function of the parameter.\r\n     */\r\n    public color: string;\r\n\r\n    /**\r\n     * width of the curve when plotted\r\n     */\r\n    public width: number;\r\n\r\n    public constructor(args: any) {\r\n        this.expression = args.expression;\r\n        this.parameter = args.parameter;\r\n        this.start = args.start;\r\n        this.end = args.end;\r\n        this.steps = args.steps;\r\n        this.color = args.color;\r\n        this.width = args.width;\r\n    }\r\n\r\n    public validate() : boolean {\r\n        if(!this.expression) {\r\n            throw new Error(\"Invalid arguments: expression not defined!\");\r\n        }\r\n        if(!this.parameter) {\r\n            throw new Error(\"Invalid arguments: parameter (variable) not defined!\");\r\n        }\r\n        if(this.start === undefined) {\r\n            throw new Error(\"Invalid arguments: start not defined!\");\r\n        }\r\n        if(this.end === undefined) {\r\n            throw new Error(\"Invalid arguments: end not defined!\");\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public defaults() : void {\r\n        if (this.steps === undefined) {\r\n            this.steps = '50';\r\n        }\r\n        if (this.color === undefined) {\r\n            this.color = null;\r\n        }\r\n        if (this.width === undefined) {\r\n            this.width = 0.01;\r\n        }\r\n    }\r\n}","import { Figure } from '../core/Figure';\r\nimport { Vector3, Mesh, ArrowHelper, Object3D, CircleBufferGeometry, MeshBasicMaterial } from 'three';\r\nimport * as math from 'mathjs';\r\n\r\nexport class Point2D implements Figure {\r\n    private positionFun: math.EvalFunction;\r\n\r\n    private hex: number;\r\n    private radius: number;\r\n    \r\n    public constructor(args: any) {\r\n        let args2 = new Point2DArgs(args); \r\n        args2.validate();\r\n        args2.defaults();\r\n        \r\n        this.positionFun = math.parse(args2.position).compile();\r\n\r\n        this.hex = args2.hex;\r\n        this.radius = args2.radius;\r\n    }\r\n    \r\n    public render(scope : any) : Object3D {\r\n        let position = new Vector3(...this.positionFun.eval(scope)._data, 0);\r\n    \r\n        let geometry = new CircleBufferGeometry(this.radius, 32 );\r\n        let material = new MeshBasicMaterial( { color: this.hex} );\r\n        let circle = new Mesh( geometry, material );\r\n        circle.position.copy(position);\r\n\r\n        return circle;\r\n    }\r\n}\r\n\r\nexport class Point2DArgs {\r\n    public position: string;\r\n\r\n    public hex : number;\r\n    public radius: number;\r\n    \r\n    public constructor(args : any) {\r\n        this.position = args.position;\r\n\r\n        this.hex = args.hex;\r\n        this.radius = args.radius;\r\n    }\r\n    \r\n    public validate() : boolean {\r\n        return true;\r\n    }\r\n    \r\n    public defaults() : void {\r\n        if (this.hex === undefined) {\r\n            this.hex = 0xffffff;\r\n        }\r\n        if(this.radius === undefined) {\r\n            this.radius = 0.05;\r\n        }\r\n    }\r\n}","import { Vector3, Object3D, Geometry, Face3, MeshBasicMaterial, Mesh, Vector2 } from 'three';\r\nimport * as math from 'mathjs';\r\nimport * as THREE from 'three';\r\nimport { Figure } from '../core/Figure';\r\n\r\nexport class Polygon2D implements Figure {\r\n    private vertexFuns : math.EvalFunction[];\r\n    private opacity: number;\r\n    \r\n    /**\r\n     * Creates a parallelogram spanned by args.u and args.v\r\n     * @param args \r\n     */\r\n    public constructor(args: any) {\r\n        let args2 = new Polygon2DArgs(args); \r\n        args2.validate();\r\n        args2.defaults();\r\n        \r\n        this.vertexFuns = args2.vertices.map((vertex) => math.parse(vertex).compile());\r\n        this.opacity = args2.opacity;\r\n    }\r\n    \r\n    public render(scope : any) : Object3D {\r\n        let vectors = this.vertexFuns.map((vf) => new Vector2(...vf.eval(scope)._data) );\r\n    \r\n        let geom = new THREE.Geometry();\r\n        let i = 0;\r\n        for(let vector of vectors) {\r\n            geom.vertices.push(new Vector3(vector.x, vector.y, 0));\r\n            if(i > 1) {\r\n                var f = new THREE.Face3(0,i,i-1);\r\n                geom.faces.push(f);\r\n            }\r\n            i++;\r\n        }\r\n\r\n        let mat = new THREE.MeshBasicMaterial({color: 0xffffff, side: THREE.DoubleSide, opacity: this.opacity, transparent: true});\r\n\r\n        return new THREE.Mesh( geom, mat );\r\n    }\r\n}\r\n\r\nexport class Polygon2DArgs {\r\n    public vertices: string[];\r\n    public opacity: number;\r\n    \r\n    public constructor(args : any) {\r\n        this.vertices = args.vertices;\r\n        this.opacity = args.opacity;\r\n    }\r\n    \r\n    public validate() : boolean {\r\n        if(!this.vertices) {\r\n            throw new Error(\"Invalid arguments: vertices not defined!\");\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    public defaults() : void {\r\n        if (this.opacity === undefined) {\r\n            this.opacity = 1;\r\n        }\r\n    }\r\n}","export { Axes2D, Axes2DArgs, Axes3D, Axes3DArgs, Plot } from './core/internal';\r\nexport { AngleArc2D, AngleArc2DArgs} from './figures/AngleArc2D';\r\nexport { Arrow2D, Arrow2DArgs } from './figures/Arrow2D';\r\nexport { Hotspot2D, Hotspot2DArgs } from './figures/Hotspot2D';\r\nexport { Label2D, Label2DArgs} from './figures/Label2D';\r\nexport { Parametric2D, Parametric2DArgs } from './figures/Parametric2D'; \r\nexport { Parallelogram2D, Parallelogram2DArgs } from './figures/Parallelogram2D'; \r\nexport { Point2D, Point2DArgs } from './figures/Point2D'; ","import { MeshLine, MeshLineMaterial } from 'three.meshline';\nimport { Object3D, Vector3, CylinderBufferGeometry, BufferGeometry, BufferAttribute, Mesh, Color, Geometry, ArrowHelper } from \"three\";\n\nexport class LineArrowHelper extends Object3D {\n    constructor(dir: Vector3, origin?: Vector3, length?: number, hex?: number, headLength?: number, headWidth?: number, width?: number) {\n        super();    \n        \n        if ( dir === undefined ) dir = new Vector3( 0, 0, 1 );\n        if ( origin === undefined ) origin = new Vector3( 0, 0, 0 );\n        if ( length === undefined ) length = 1;\n        if ( hex === undefined ) hex = 0xffff00;\n        if ( headLength === undefined ) headLength = 0.2 * length;\n        if ( headWidth === undefined ) headWidth = 0.2 * headLength;\n        if ( width === undefined ) width = 0.01;\n        \n        let end = origin.clone().add(dir.clone().multiplyScalar(length - headLength));\n        \n        let geom = new Geometry();\n        geom.vertices.push(origin);\n        geom.vertices.push(end);\n        \n        let line = new MeshLine();\n        line.setGeometry(geom);\n        \n        let material = new MeshLineMaterial({lineWidth: width, color: new Color( hex ) });\n        this.add(new Mesh(line.geometry, material))\n\n        this.add(new ArrowHelper(dir, origin, length, hex, headLength, headWidth));\n    }\n}","export function bracketAwareSplit(s: string, delimiters: string): string[] {\r\n    let parts = [''];\r\n    let depth = 0;\r\n    for(let c of s) {\r\n        if(c == '(' || c == '[' || c == '{') {\r\n            depth++;\r\n        }\r\n        if(c == ')' || c == ']' || c == '}') {\r\n            depth--;\r\n        }\r\n        if(depth == 0 && delimiters.includes(c)) {\r\n            parts.push('');\r\n        } else {\r\n            parts[parts.length - 1] += c;\r\n        }\r\n    }\r\n    return parts;\r\n}","module.exports = math;","module.exports = React;","module.exports = ReactDOM;","module.exports = THREE;"],"sourceRoot":""}